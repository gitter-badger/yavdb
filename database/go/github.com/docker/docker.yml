---
- id: snykio:go:github.com/docker/docker:50001
  title: Privilege Escalation
  description: |
    Affected version of [`github.com/docker/docker`][1] are vulnerable to
    Privilege Escalation. Docker 1.0.0 uses world-readable and
    world-writable permissions on the management socket, which allows local
    users to gain privileges via unspecified vectors.



    [1]: https://github.com/docker/docker
  affected_package: github.com/docker/docker
  vulnerable_versions:
  - "<1.0.1"
  severity: high
  package_manager: go
  cve:
  - CVE-2014-3499
  cwe:
  - CWE-264
  disclosed_date: 2014-06-30
  created_date: 2014-06-30
  last_modified_date: 2014-06-30
  credit:
  - Jon Stanley
  references:
  - http://rhn.redhat.com/errata/RHSA-2014-0820.html
  - https://github.com/docker/docker/commit/707ef9618b3b26a0534a0af732a22f159eccfaa5
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-3499
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDOCKERDOCKER-50001
- id: snykio:go:github.com/docker/docker:50006
  title: Directory Traversal
  description: |
    Affected version of [`github.com/docker/docker`][1] are vulnerable to
    Directory Traversal attacks when processing of absolute symlinks. Only
    relative links were considered while checking symlinks for traversals.
    An attacker could exploit this archive extraction or through volume
    mounts.



    [1]: https://github.com/docker/docker
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: github.com/docker/docker
  vulnerable_versions:
  - "<1.3.3"
  severity: medium
  package_manager: go
  cve:
  - CVE-2014-9356
  cwe:
  - CWE-22
  disclosed_date: 2014-12-10
  created_date: 2014-12-10
  last_modified_date: 2014-12-10
  credit:
  - Tõnis Tiigi
  references:
  - https://access.redhat.com/security/cve/cve-2014-9356
  - https://groups.google.com/forum/#%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9356
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDOCKERDOCKER-50006
- id: snykio:go:github.com/docker/docker:50007
  title: Arbitrary Code Execution
  description: |
    Affected version of [`github.com/docker/docker`][1] are vulnerable to
    Arbitrary Code Execution attacks. Docker 1.3.2 allows remote attackers
    to execute arbitrary code with root privileges via a crafted (1) image
    or (2) build in a Dockerfile in an LZMA (.xz) archive, related to the
    chroot for archive extraction.



    [1]: https://github.com/docker/docker
  affected_package: github.com/docker/docker
  vulnerable_versions:
  - "=1.3.3"
  severity: high
  package_manager: go
  cve:
  - CVE-2014-9357
  cwe:
  - CWE-264
  disclosed_date: 2014-12-10
  created_date: 2014-12-10
  last_modified_date: 2014-12-10
  credit:
  - Tõnis Tiigi
  references:
  - https://github.com/docker/docker/compare/aef842e7dfb534aba22c3c911de525ce9ac12b72...313a1b7620910e47d888f8b0a6a5eb06ad9c1ff2
  - https://groups.google.com/forum/#%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9357
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDOCKERDOCKER-50007
- id: snykio:go:github.com/docker/docker:50008
  title: Directory Traversal
  description: "Affected version of [`github.com/docker/docker`][1] are vulnerable
    to\nDirectory Traversal attacks.  \nDocker before 1.3.3 does not properly validate
    image IDs, which allows\nremote attackers to conduct path traversal attacks and
    spoof\nrepositories via a crafted image in a (1) \\\"docker load\\\" operation
    or\n(2) \\\"registry communications.\\\"\n\n\n\n[1]: https://github.com/docker/docker\n\\nA
    Directory Traversal attack (also known as path traversal) aims to\naccess files
    and directories that are stored outside the intended\nfolder. By manipulating
    files with \\\"dot-dot-slash (../)\\\" sequences and\nits variations, or by using
    absolute file paths, it may be possible to\naccess arbitrary files and directories
    stored on file system, including\napplication source code, configuration, and
    other critical system files.\n\nDirectory Traversal vulnerabilities can be generally
    divided into two\ntypes:\n\n* **Information Disclosure**\\: Allows the attacker
    to gain information\n  about the folder structure or read the contents of sensitive
    files on\n  the system.\n\n`st` is a module for serving static files on web pages,
    and contains a\n[vulnerability of this type][1]. In our example, we will serve
    files\nfrom the `public` route.\n\nIf an attacker requests the following URL from
    our server, it will in\nturn leak the sensitive private key of the root user.\n\n
    \   curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n\n**Note**
    `%2e` is the URL encoded version of `.` (dot).\n\n* **Writing arbitrary files**\\:
    Allows the attacker to create or replace\n  existing files. This type of vulnerability
    is also known as\n  `Zip-Slip`.\n\nOne way to achieve this is by using a malicious
    `zip` archive that holds\npath traversal filenames. When each filename in the
    zip archive gets\nconcatenated to the target extraction folder, without validation,
    the\nfinal path ends up outside of the target folder. If an executable or a\nconfiguration
    file is overwritten with a file containing malicious code,\nthe problem can turn
    into an arbitrary code execution issue quite\neasily.\n\nThe following is an example
    of a `zip` archive with one benign file and\none malicious file. Extracting the
    malicious file will result in\ntraversing out of the target folder, ending up
    in `/root/.ssh/`\noverwriting the `authorized_keys` file:\n\n    2018-04-15 22:04:29
    .....           19           19  good.txt\n    2018-04-15 22:04:42 .....           20
    \          20  ../../../../../../root/.ssh/authorized_keys\n\n\n\n[1]: https://snyk.io/vuln/npm:st:20140206\n"
  affected_package: github.com/docker/docker
  vulnerable_versions:
  - "<1.3.2"
  severity: medium
  package_manager: go
  cve:
  - CVE-2014-9358
  cwe:
  - CWE-22
  disclosed_date: 2014-12-10
  created_date: 2014-12-10
  last_modified_date: 2014-12-10
  credit:
  - Eric Windisch
  references:
  - https://access.redhat.com/security/cve/cve-2014-9358
  - https://groups.google.com/forum/#%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9358
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDOCKERDOCKER-50008
- id: snykio:go:github.com/docker/docker:50010
  title: Arbitrary Code Execution
  description: |
    Affected version of [`github.com/docker/docker`][1] are vulnerable to
    Arbitrary Code Execution. Docker before 1.3.2 allows remote attackers to
    write to arbitrary files and execute arbitrary code via a (1) symlink or
    (2) hard link attack in an image archive in a (a) pull or (b) load
    operation.



    [1]: https://github.com/docker/docker
  affected_package: github.com/docker/docker
  vulnerable_versions:
  - "<1.3.2"
  severity: high
  package_manager: go
  cve:
  - CVE-2014-6407
  cwe:
  - CWE-59
  disclosed_date: 2014-11-08
  created_date: 2014-11-08
  last_modified_date: 2014-11-08
  credit:
  - Unknown
  references:
  - http://www.openwall.com/lists/oss-security/2014/11/24/5
  - https://github.com/docker/docker/commit/3ac6394b8082d4700483d52fbfe54914be537d9e
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-6407
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDOCKERDOCKER-50010
- id: snykio:go:github.com/docker/docker:50018
  title: Access Restriction Bypass
  description: |
    Affected version of [`github.com/docker/docker`][1] are vulnerable to
    Access Restriction Bypass. Docker 1.3.0 through 1.3.1 allows remote
    attackers to modify the default run profile of image containers and
    possibly bypass the container by applying unspecified security options
    to an image.



    [1]: https://github.com/docker/docker
  affected_package: github.com/docker/docker
  vulnerable_versions:
  - ">=1.3.0 <1.3.2"
  severity: medium
  package_manager: go
  cve:
  - CVE-2014-6408
  cwe:
  - CWE-264
  disclosed_date: 2014-11-04
  created_date: 2014-11-04
  last_modified_date: 2014-11-04
  credit:
  - Unknown
  references:
  - http://www.openwall.com/lists/oss-security/2014/11/24/5
  - https://github.com/docker/docker/commit/c9379eb3fbbc484c056f5a5e49d8d0b755a29c45
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-6408
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDOCKERDOCKER-50018
- id: snykio:go:github.com/docker/docker:50024
  title: Man-in-the-Middle (MitM)
  description: |
    Affected version of [`github.com/docker/docker`][1] are vulnerable to
    HTTP downgrade attacks. Docker before 1.3.1 and docker-py before 0.5.3
    fall back to HTTP when the HTTPS connection to the registry fails, which
    allows man-in-the-middle attackers to conduct downgrade attacks and
    obtain authentication and image data by leveraging a network position
    between the client and the registry to block HTTPS traffic.



    [1]: https://github.com/docker/docker
  affected_package: github.com/docker/docker
  vulnerable_versions:
  - "<1.3.1"
  severity: medium
  package_manager: go
  cve:
  - CVE-2014-5277
  cwe:
  - CWE-17
  disclosed_date: 2014-10-16
  created_date: 2014-10-16
  last_modified_date: 2014-10-16
  credit:
  - Solomon Hykes
  references:
  - https://github.com/docker/docker/commit/8caacb18f8019dfda30d79c327397e5f5783c068
  - https://groups.google.com/forum/#%21topic/docker-user/oYm0i3xShJU
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-5277
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDOCKERDOCKER-50024
- id: snykio:go:github.com/docker/docker:50044
  title: Symlink Attack
  description: |
    Affected version of [`github.com/docker/docker`][1] are vulnerable to
    Symlink Attacks. Libcontainer and Docker Engine before 1.6.1 opens the
    file-descriptor passed to the pid-1 process before performing the
    chroot, which allows local users to gain privileges via a symlink attack
    in an image.



    [1]: https://github.com/docker/docker
  affected_package: github.com/docker/docker
  vulnerable_versions:
  - "<1.6.1"
  severity: high
  package_manager: go
  cve:
  - CVE-2015-3627
  cwe:
  - CWE-59
  disclosed_date: 2015-05-18
  created_date: 2015-08-05
  last_modified_date: 2015-08-05
  credit:
  - Tõnis Tiigi
  references:
  - http://packetstormsecurity.com/files/131835/Docker-Privilege-Escalation-Information-Disclosure.html
  - http://seclists.org/fulldisclosure/2015/May/28
  - https://github.com/docker/docker/commit/d5ebb60bddbabea0439213501f4f6ed494b23cba
  - https://groups.google.com/forum/#%21searchin/docker-user/1.6.1/docker-user/47GZrihtr-4/nwgeOOFLexIJ
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-3627
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDOCKERDOCKER-50044
- id: snykio:go:github.com/docker/docker:50045
  title: Arbitrary File Write
  description: |
    Affected version of [`github.com/docker/docker`][1] are vulnerable to
    Arbitrary File Write. Libcontainer 1.6.0, as used in Docker Engine,
    allows local users to escape containerization (\"mount namespace
    breakout\") and write to arbitrary file on the host system via a symlink
    attack in an image when respawning a container.



    [1]: https://github.com/docker/docker
  affected_package: github.com/docker/docker
  vulnerable_versions:
  - ">=1.6.0 <1.6.1"
  severity: high
  package_manager: go
  cve:
  - CVE-2015-3629
  cwe:
  - CWE-59
  disclosed_date: 2015-05-18
  created_date: 2015-08-05
  last_modified_date: 2015-08-05
  credit:
  - Tõnis Tiigi
  references:
  - http://packetstormsecurity.com/files/131835/Docker-Privilege-Escalation-Information-Disclosure.html
  - http://seclists.org/fulldisclosure/2015/May/28
  - https://github.com/docker/docker/commit/d5ebb60bddbabea0439213501f4f6ed494b23cba
  - https://groups.google.com/forum/#%21searchin/docker-user/1.6.1/docker-user/47GZrihtr-4/nwgeOOFLexIJ
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-3629
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDOCKERDOCKER-50045
- id: snykio:go:github.com/docker/docker:50046
  title: Information Exposure
  description: |
    Affected version of [`github.com/docker/docker`][1] are vulnerable to
    Information Exposure. Docker Engine before 1.6.1 uses weak permissions
    for (1) /proc/asound, (2) /proc/timer\_stats, (3) /proc/latency\_stats,
    and (4) /proc/fs, which allows local users to modify the host, obtain
    sensitive information, and perform protocol downgrade attacks via a
    crafted image.



    [1]: https://github.com/docker/docker
  affected_package: github.com/docker/docker
  vulnerable_versions:
  - ">=1.6.0 <1.6.1"
  severity: high
  package_manager: go
  cve:
  - CVE-2015-3630
  cwe:
  - CWE-264
  disclosed_date: 2015-05-18
  created_date: 2015-08-05
  last_modified_date: 2015-08-05
  credit:
  - Eric Windisch
  references:
  - http://packetstormsecurity.com/files/131835/Docker-Privilege-Escalation-Information-Disclosure.html
  - http://seclists.org/fulldisclosure/2015/May/28
  - https://github.com/moby/moby/commit/545b440a80f676a506e5837678dd4c4f65e78660
  - https://groups.google.com/forum/#%21searchin/docker-user/1.6.1/docker-user/47GZrihtr-4/nwgeOOFLexIJ
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-3630
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDOCKERDOCKER-50046
- id: snykio:go:github.com/docker/docker:50047
  title: Arbitrary File Override
  description: |
    Affected version of [`github.com/docker/docker`][1] are vulnerable to
    Arbitrary File Override. Docker Engine before 1.6.1 allows local users
    to set arbitrary Linux Security Modules (LSM) and docker\_t policies via
    an image that allows volumes to override files in /proc.



    [1]: https://github.com/docker/docker
  affected_package: github.com/docker/docker
  vulnerable_versions:
  - "<1.6.1"
  severity: medium
  package_manager: go
  cve:
  - CVE-2015-3631
  cwe:
  - CWE-264
  disclosed_date: 2015-05-18
  created_date: 2015-08-05
  last_modified_date: 2015-08-05
  credit:
  - Eric Windisch
  references:
  - http://packetstormsecurity.com/files/131835/Docker-Privilege-Escalation-Information-Disclosure.html
  - http://seclists.org/fulldisclosure/2015/May/28
  - https://github.com/moby/moby/compare/769acfec2928c47a35da5357d854145b1036448d...b6a9dc399be31c531e3753104e10d74760ed75a2
  - https://groups.google.com/forum/#%21searchin/docker-user/1.6.1/docker-user/47GZrihtr-4/nwgeOOFLexIJ
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-3631
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDOCKERDOCKER-50047
