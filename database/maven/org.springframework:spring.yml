---
- id: snykio:maven:org.springframework:spring:31321
  title: Arbitrary Code Execution
  description: |
    [org.springframework:spring][1] is a core package within the
    spring-framework that contains multiple classes and utilities.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution, via an HTTP request containing
    `class.classLoader.URLs[0]=jar:` followed by a URL of a crafted `.jar`
    file.



    [1]: https://mvnrepository.com/artifact/org.springframework/spring
  affected_package: org.springframework:spring
  vulnerable_versions:
  - ">= 2.5 < 2.5.6.SEC02"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2010-1622
  cwe:
  - CWE-94
  disclosed_date: 2010-06-18
  created_date: 2010-06-18
  last_modified_date: 2010-06-18
  credit:
  - Meder Kydyraliev
  references:
  - http://seclists.org/fulldisclosure/2010/Jun/456
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2010-1622
  - https://www.exploit-db.com/exploits/13918
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-31321
- id: snykio:maven:org.springframework:spring:31613
  title: Directory Traversal
  description: |
    [`org.springframework:spring`][1] An issue was discovered in Pivotal
    Spring Framework before 3.2.18, 4.2.x before 4.2.9, and 4.3.x before
    4.3.5. Paths provided to the `ResourceServlet` were not properly
    sanitized and as a result exposed to directory traversal attacks.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-webmvc%22
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: org.springframework:spring
  vulnerable_versions:
  - ">= 1.2.1 <= 3.1.4.RELEASE"
  - ">= 3.2.0.RELEASE < 3.2.18.RELEASE"
  - ">= 4.2.0.RELEASE < 4.2.9.RELEASE"
  - ">= 4.3.0.RELEASE < 4.3.5.RELEASE"
  severity: high
  package_manager: maven
  cve:
  - CVE-2016-9878
  cwe:
  - CWE-22
  disclosed_date: 2016-12-28
  created_date: 2016-12-28
  last_modified_date: 2016-12-28
  credit:
  - Shumpei Asahara
  - Yuji Ito
  references:
  - https://pivotal.io/security/cve-2016-9878
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-9878
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-31613
- id: victims:maven:org.springframework:spring:2016-9878
  title: Directory Traversal in the Spring Framework ResourceServlet
  description: 'Paths provided to the ResourceServlet were not properly sanitized
    and as a result exposed to directory traversal attacks.

'
  affected_package: org.springframework:spring
  vulnerable_versions:
  - '4.2'
  - '4.3'
  - "<=3.2.17.RELEASE"
  - "<=4.2.8.RELEASE"
  - "<=4.3.4.RELEASE"
  patched_versions:
  - '3.2'
  - '4.3'
  - ">=3.2.18.RELEASE"
  - ">=4.2.9.RELEASE.4.2"
  - ">=4.3.5.RELEASE"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2016-9878
  cvss_v2_score: 5.0
  credit:
  - Victims CVE Database
  references:
  - https://pivotal.io/security/cve-2016-9878
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2016/9878.yaml
