---
- id: snykio:maven:org.webjars:request:480156
  title: Remote Memory Exposure
  description: "[org.webjars:request][1] is a simplified http request client.\n\nAffected
    versions of this package are vulnerable to Remote Memory\nExposure. A potential
    remote memory exposure vulnerability exists in\n`request`. If a `request` uses
    a multipart attachment and the *body\ntype* option is `number` with value X, then
    X bytes of uninitialized\nmemory will be sent in the body of the request.\n\nNote
    that while the impact of this vulnerability is high (memory\nexposure), exploiting
    it is likely difficult, as the attacker needs to\nsomehow control the body type
    of the request. One potential exploit\nscenario is when a request is composed
    based on JSON input, including\nthe body type, allowing a malicious JSON to trigger
    the memory leak.\n\n\n\n[1]: https://www.npmjs.com/package/request\n\\nConstructing
    a `Buffer` class with integer `N` creates a `Buffer` of\nlength `N` with non zero-ed
    out memory. **Example:**\n\n    var x = new Buffer(100); // uninitialized Buffer
    of length 100\n    // vs\n    var x = new Buffer('100'); // initialized Buffer
    with value of '100'\n{: .language-js}\n\nInitializing a multipart body in such
    manner will cause uninitialized\nmemory to be sent in the body of the request.\n\n####
    Proof of concept   {#proof-of-concept}\n\n    var http = require('http')\n    var
    request = require('request')\n    \n    http.createServer(function (req, res)
    {\n      var data = ''\n      req.setEncoding('utf8')\n      req.on('data', function
    (chunk) {\n        console.log('data')\n        data += chunk\n      })\n      req.on('end',
    function () {\n        // this will print uninitialized memory from the client\n
    \       console.log('Client sent:\\n', data)\n      })\n      res.end()\n    }).listen(8000)\n
    \   \n    request({\n      method: 'POST',\n      uri: 'http://localhost:8000',\n
    \     multipart: [{ body: 1000 }]\n    },\n    function (err, res, body) {\n      if
    (err) return console.error('upload failed:', err)\n      console.log('sent')\n
    \   })\n{: .language-js}\n\n"
  affected_package: org.webjars:request
  vulnerable_versions:
  - ">= 0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2017-16026
  cwe:
  - CWE-201
  disclosed_date: 2016-01-19
  created_date: 2016-03-22
  last_modified_date: 2016-03-22
  credit:
  - Feross Aboukhadijeh
  references:
  - https://github.com/ChALkeR/notes/blob/master/Buffer-knows-everything.md
  - https://github.com/ChALkeR/notes/blob/master/Lets-fix-Buffer-API.md#previous-materials
  - https://github.com/request/request/pull/2018
  - https://github.com/request/request/pull/2018/commits/3d31d4526fa4d4e4f59b89cabe194fb671063cdb
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-480156
