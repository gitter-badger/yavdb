---
- id: ossindex:maven:org.apache.xmlgraphics:batik-rasterizer:8402803470
  title: '[CVE-2017-5662]  Improper Restriction of XML External Entity Reference ("XXE")'
  description: In Apache Batik before 1.9, files lying on the filesystem of the server
    which uses batik can be revealed to arbitrary users who send maliciously formed
    SVG files. The file types that can be shown depend on the user context in which
    the exploitable application is running. If the user is root a full compromise
    of the server - including confidential or sensitive files - would be possible.
    XXE can also be used to attack the availability of the server via denial of service
    as the references within a xml document can trivially trigger an amplification
    attack.
  affected_package: org.apache.xmlgraphics:batik-rasterizer
  vulnerable_versions:
  - "<1.9.0"
  package_manager: maven
  cve:
  - CVE-2017-5662
  disclosed_date: 2017-04-18
  created_date: 2017-04-18
  last_modified_date: 2017-06-26
  credit:
  - OSSIndex
  references:
  - http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html
  - http://www.securityfocus.com/bid/97948
  - http://www.securitytracker.com/id/1038334
  - https://access.redhat.com/errata/RHSA-2017:2546
  - https://access.redhat.com/errata/RHSA-2017:2547
  - https://xmlgraphics.apache.org/security.html
  source_url: https://ossindex.net/resource/package/7015336277/vulnerabilities
- id: snykio:maven:org.apache.xmlgraphics:batik-rasterizer:31391
  title: XML External Entity (XXE) Injection
  description: |+
    [org.apache.xmlgraphics:batik-rasterizer][1] is a Batik SVG Rasterizer
    Application.

    Affected versions of this package are vulnerable to XML External Entity
    (XXE) Injection. Files lying on the filesystem of the server which uses
    batik can be revealed to arbitrary users who send maliciously formed SVG
    files. The file types that can be shown depend on the user context in
    which the exploitable application is running. If the user is root a full
    compromise of the server - including confidential or sensitive files -
    would be possible. XXE can also be used to attack the availability of
    the server via denial of service as the references within a xml document
    can trivially trigger an amplification attack.



    [1]: https://mvnrepository.com/artifact/org.apache.xmlgraphics/batik-rasterizer
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: org.apache.xmlgraphics:batik-rasterizer
  vulnerable_versions:
  - "< 1.9"
  severity: high
  package_manager: maven
  cve:
  - CVE-2017-5662
  cwe:
  - CWE-611
  disclosed_date: 2017-04-18
  created_date: 2017-05-21
  last_modified_date: 2017-05-21
  credit:
  - Unknown
  references:
  - https://github.com/apache/batik/commit/998cabf7af08852e8305f60b5e4c0b6721c47667
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-5662
  - https://xmlgraphics.apache.org/security.html
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEXMLGRAPHICS-31391
- id: victims:maven:org.apache.xmlgraphics:batik-rasterizer:2017-5662
  title: XXE vulnerability in Batik rasterizer
  description: 'In Apache Batik before 1.9, files lying on the filesystem of the server
    which uses batik can be revealed to arbitrary users who send maliciously formed
    SVG files. The file types that can be shown depend on the user context in which
    the exploitable application is running. If the user is root a full compromise
    of the server - including confidential or sensitive files - would be possible.
    XXE can also be used to attack the availability of the server via denial of service
    as the references within a xml document can trivially trigger an amplification
    attack.

'
  affected_package: org.apache.xmlgraphics:batik-rasterizer
  vulnerable_versions:
  - "<=1.8"
  patched_versions:
  - ">=1.9"
  severity: high
  package_manager: maven
  cve:
  - CVE-2017-5662
  cvss_v2_score: 7.5
  credit:
  - Victims CVE Database
  references:
  - https://access.redhat.com/security/cve/cve-2017-5662
  - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-5662
  - https://vuldb.com/?id.99937
  - https://xmlgraphics.apache.org/security.html
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2017/5662.yaml
