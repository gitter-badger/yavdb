---
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:345925
  title: '[CVE-2011-1772]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: Multiple cross-site scripting (XSS) vulnerabilities in XWork in Apache
    Struts 2.x before 2.2.3, and OpenSymphony XWork in OpenSymphony WebWork, allow
    remote attackers to inject arbitrary web script or HTML via vectors involving
    (1) an action name, (2) the action attribute of an s:submit element, or (3) the
    method attribute of an s:submit element.
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">=2.0.0 <2.2.3"
  package_manager: maven
  cve:
  - CVE-2011-1772
  disclosed_date: 2011-05-13
  created_date: 2011-05-13
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://jvn.jp/en/jp/JVN25435092/index.html
  - http://jvndb.jvn.jp/jvndb/JVNDB-2011-000106
  - http://secureappdev.blogspot.com/2011/05/apache-struts-2-xwork-webwork-reflected.html
  - http://secureappdev.blogspot.com/2011/05/Struts_2_XWork_WebWork_XSS_in_error_pages.html
  - http://struts.apache.org/2.2.3/docs/version-notes-223.html
  - http://struts.apache.org/2.x/docs/s2-006.html
  - http://www.securityfocus.com/bid/47784
  - http://www.ventuneac.net/security-advisories/MVSA-11-006
  - http://www.vupen.com/english/advisories/2011/1198
  - https://issues.apache.org/jira/browse/WW-3579
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:346177
  title: "[CVE-2011-2088]  Information Exposure"
  description: XWork 2.2.1 in Apache Struts 2.2.1, and OpenSymphony XWork in OpenSymphony
    WebWork, allows remote attackers to obtain potentially sensitive information about
    internal Java class paths via vectors involving an s:submit element and a nonexistent
    method, a different vulnerability than CVE-2011-1772.3.
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - 2.2.1
  package_manager: maven
  cve:
  - CVE-2011-2088
  disclosed_date: 2011-05-13
  created_date: 2011-05-13
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://secureappdev.blogspot.com/2011/05/apache-struts-2-xwork-webwork-reflected.html
  - http://secureappdev.blogspot.com/2011/05/Struts_2_XWork_WebWork_XSS_in_error_pages.html
  - http://www.securityfocus.com/archive/1/archive/1/518066/100/0/threaded
  - http://www.ventuneac.net/security-advisories/MVSA-11-006
  - https://issues.apache.org/jira/browse/WW-3579
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:349190
  title: "[CVE-2012-0391]  Improper Input Validation"
  description: The ExceptionDelegator component in Apache Struts before 2.2.3.1 interprets
    parameter values as OGNL expressions during certain exception handling for mismatched
    data types of properties, which allows remote attackers to execute arbitrary Java
    code via a crafted parameter.
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">=2.0.0 <2.2.3.1"
  package_manager: maven
  cve:
  - CVE-2012-0391
  disclosed_date: 2012-01-08
  created_date: 2012-01-08
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://archives.neohapsis.com/archives/bugtraq/2012-01/0031.html
  - http://secunia.com/advisories/47393
  - http://struts.apache.org/2.x/docs/s2-008.html
  - http://struts.apache.org/2.x/docs/version-notes-2311.html
  - http://www.exploit-db.com/exploits/18329
  - https://issues.apache.org/jira/browse/WW-3668
  - https://www.sec-consult.com/files/20120104-0_Apache_Struts2_Multiple_Critical_Vulnerabilities.txt
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:349191
  title: "[CVE-2012-0392]  Permissions, Privileges, and Access Controls"
  description: The CookieInterceptor component in Apache Struts before 2.3.1.1 does
    not use the parameter-name whitelist, which allows remote attackers to execute
    arbitrary commands via a crafted HTTP Cookie header that triggers Java code execution
    through a static method.
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">=2.0.0 <2.3.1.1"
  package_manager: maven
  cve:
  - CVE-2012-0392
  disclosed_date: 2012-01-08
  created_date: 2012-01-08
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://archives.neohapsis.com/archives/bugtraq/2012-01/0031.html
  - http://secunia.com/advisories/47393
  - http://struts.apache.org/2.x/docs/s2-008.html
  - http://struts.apache.org/2.x/docs/version-notes-2311.html
  - http://www.exploit-db.com/exploits/18329
  - https://lists.immunityinc.com/pipermail/dailydave/2012-January/000011.html
  - https://www.sec-consult.com/files/20120104-0_Apache_Struts2_Multiple_Critical_Vulnerabilities.txt
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:349192
  title: "[CVE-2012-0393]  Permissions, Privileges, and Access Controls"
  description: The ParameterInterceptor component in Apache Struts before 2.3.1.1
    does not prevent access to public constructors, which allows remote attackers
    to create or overwrite arbitrary files via a crafted parameter that triggers the
    creation of a Java object.
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">=2.0.0 <2.3.1.1"
  package_manager: maven
  cve:
  - CVE-2012-0393
  disclosed_date: 2012-01-08
  created_date: 2012-01-08
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://archives.neohapsis.com/archives/bugtraq/2012-01/0031.html
  - http://secunia.com/advisories/47393
  - http://struts.apache.org/2.x/docs/s2-008.html
  - http://struts.apache.org/2.x/docs/version-notes-2311.html
  - http://www.exploit-db.com/exploits/18329
  - https://www.sec-consult.com/files/20120104-0_Apache_Struts2_Multiple_Critical_Vulnerabilities.txt
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:349193
  title: '[CVE-2012-0394]  Improper Control of Generation of Code ("Code Injection")'
  description: '** DISPUTED ** The DebuggingInterceptor component in Apache Struts
    before 2.3.1.1, when developer mode is used, allows remote attackers to execute
    arbitrary commands via unspecified vectors.  NOTE: the vendor characterizes this
    behavior as not "a security vulnerability itself."'
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">=2.0.0 <2.3.1.1"
  package_manager: maven
  cve:
  - CVE-2012-0394
  disclosed_date: 2012-01-08
  created_date: 2012-01-08
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://archives.neohapsis.com/archives/bugtraq/2012-01/0031.html
  - http://struts.apache.org/2.x/docs/s2-008.html
  - http://struts.apache.org/2.x/docs/version-notes-2311.html
  - http://www.exploit-db.com/exploits/18329
  - http://www.exploit-db.com/exploits/31434
  - http://www.osvdb.org/78276
  - https://www.sec-consult.com/files/20120104-0_Apache_Struts2_Multiple_Critical_Vulnerabilities.txt
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:349596
  title: "[CVE-2012-0838]  Improper Input Validation"
  description: Apache Struts 2 before 2.2.3.1 evaluates a string as an OGNL expression
    during the handling of a conversion error, which allows remote attackers to modify
    run-time data values, and consequently execute arbitrary code, via invalid input
    to a field.
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">=2.0.0 <2.2.3.1"
  package_manager: maven
  cve:
  - CVE-2012-0838
  disclosed_date: 2012-03-02
  created_date: 2012-03-02
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://jvn.jp/en/jp/JVN79099262/index.html
  - http://jvndb.jvn.jp/jvndb/JVNDB-2012-000012
  - http://struts.apache.org/2.3.1.2/docs/s2-007.html
  - https://issues.apache.org/jira/browse/WW-3668
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:352462
  title: "[CVE-2012-4387]  Permissions, Privileges, and Access Controls"
  description: Apache Struts 2.0.0 through 2.3.4 allows remote attackers to cause
    a denial of service (CPU consumption) via a long parameter name, which is processed
    as an OGNL expression.
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">=2.0.0 <=2.3.4"
  package_manager: maven
  cve:
  - CVE-2012-4387
  disclosed_date: 2012-09-05
  created_date: 2012-09-05
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://secunia.com/advisories/50420
  - http://struts.apache.org/2.x/docs/s2-011.html
  - http://www.openwall.com/lists/oss-security/2012/09/01/4
  - http://www.openwall.com/lists/oss-security/2012/09/01/5
  - http://www.securityfocus.com/bid/55346
  - http://xforce.iss.net/xforce/xfdb/78183
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/78183
  - https://issues.apache.org/jira/browse/WW-3860
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:355667
  title: '[CVE-2013-1966]  Improper Control of Generation of Code ("Code Injection")'
  description: Apache Struts 2 before 2.3.14.1 allows remote attackers to execute
    arbitrary OGNL code via a crafted request that is not properly handled when using
    the includeParams attribute in the (1) URL or (2) A tag.
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">=2.0.0 <2.3.14.1"
  package_manager: maven
  cve:
  - CVE-2013-1966
  disclosed_date: 2013-07-10
  created_date: 2013-07-10
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://struts.apache.org/development/2.x/docs/s2-013.html
  - http://www.securityfocus.com/bid/60166
  - https://bugzilla.redhat.com/show_bug.cgi?id=967656
  - https://cwiki.apache.org/confluence/display/WW/S2-013
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:355810
  title: '[CVE-2013-2135]  Improper Control of Generation of Code ("Code Injection")'
  description: Apache Struts 2 before 2.3.14.3 allows remote attackers to execute
    arbitrary OGNL code via a request with a crafted value that contains both "${}"
    and "%{}" sequences, which causes the OGNL code to be evaluated twice.
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">=2.0.0 <2.3.14.3"
  package_manager: maven
  cve:
  - CVE-2013-2135
  disclosed_date: 2013-07-16
  created_date: 2013-07-16
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://struts.apache.org/development/2.x/docs/s2-015.html
  - http://www.oracle.com/technetwork/topics/security/cpujan2014-1972949.html
  - http://www.oracle.com/technetwork/topics/security/cpuoct2013-1899837.html
  - http://www.securityfocus.com/bid/64758
  - https://cwiki.apache.org/confluence/display/WW/S2-015
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:359768
  title: "[CVE-2014-0112]  Permissions, Privileges, and Access Controls"
  description: 'ParametersInterceptor in Apache Struts before 2.3.16.2 does not properly
    restrict access to the getClass method, which allows remote attackers to "manipulate"
    the ClassLoader and execute arbitrary code via a crafted request.  NOTE: this
    vulnerability exists because of an incomplete fix for CVE-2014-0094.'
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">=2.0.0 <2.3.16.2"
  package_manager: maven
  cve:
  - CVE-2014-0112
  disclosed_date: 2014-04-29
  created_date: 2014-04-29
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://jvn.jp/en/jp/JVN19294237/index.html
  - http://jvndb.jvn.jp/jvndb/JVNDB-2014-000045
  - http://packetstormsecurity.com/files/127215/VMware-Security-Advisory-2014-0007.html
  - http://secunia.com/advisories/59178
  - http://secunia.com/advisories/59500
  - http://www-01.ibm.com/support/docview.wss?uid=swg21676706
  - http://www.oracle.com/technetwork/topics/security/cpuapr2015-2365600.html
  - http://www.securityfocus.com/archive/1/archive/1/531952/100/0/threaded
  - http://www.securityfocus.com/archive/1/archive/1/532549/100/0/threaded
  - http://www.securityfocus.com/bid/67064
  - http://www.vmware.com/security/advisories/VMSA-2014-0007.html
  - https://bugzilla.redhat.com/show_bug.cgi?id=1091939
  - https://cwiki.apache.org/confluence/display/WW/S2-021
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:7094920548
  title: "[CVE-2015-1831] The default exclude patterns (excludeParams) in Apache Struts
    2.3.20 allow remot..."
  description: The default exclude patterns (excludeParams) in Apache Struts 2.3.20
    allow remote attackers to "compromise internal state of an application" via unspecified
    vectors.
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - 2.3.20
  package_manager: maven
  cve:
  - CVE-2015-1831
  disclosed_date: 2015-07-16
  created_date: 2015-07-16
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://www.securityfocus.com/bid/75940
  - http://www.securitytracker.com/id/1032985
  - https://struts.apache.org/docs/s2-024.html
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:8398916189
  title: "[CVE-2016-0785]  Improper Input Validation"
  description: Apache Struts 2.x before 2.3.28 allows remote attackers to execute
    arbitrary code via a "%{}" sequence in a tag attribute, aka forced double OGNL
    evaluation.
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">=2.0.0 <2.3.28"
  package_manager: maven
  cve:
  - CVE-2016-0785
  disclosed_date: 2016-04-12
  created_date: 2016-04-12
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://struts.apache.org/docs/s2-029.html
  - http://www.securityfocus.com/bid/85066
  - http://www.securitytracker.com/id/1035271
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:8398917166
  title: '[CVE-2016-2162]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: Apache Struts 2.x before 2.3.25 does not sanitize text in the Locale
    object constructed by I18NInterceptor, which might allow remote attackers to conduct
    cross-site scripting (XSS) attacks via unspecified vectors involving language
    display.
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">=2.0.0 <2.3.25"
  package_manager: maven
  cve:
  - CVE-2016-2162
  disclosed_date: 2016-04-12
  created_date: 2016-04-12
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://struts.apache.org/docs/s2-030.html
  - http://www.securityfocus.com/bid/85070
  - http://www.securitytracker.com/id/1035272
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:8399186888
  title: "[CVE-2016-3093]  Improper Input Validation"
  description: Apache Struts 2.0.0 through 2.3.24.1 does not properly cache method
    references when used with OGNL before 3.0.12, which allows remote attackers to
    cause a denial of service (block access to a web site) via unspecified vectors.
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">=2.0.0 <=2.3.24.1"
  package_manager: maven
  cve:
  - CVE-2016-3093
  disclosed_date: 2016-06-07
  created_date: 2016-06-07
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://struts.apache.org/docs/s2-034.html
  - http://www-01.ibm.com/support/docview.wss?uid=swg21987854
  - http://www.securityfocus.com/bid/90961
  - http://www.securitytracker.com/id/1036018
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:8399926074
  title: "[CVE-2016-4433]  Improper Input Validation"
  description: Apache Struts 2 2.3.20 through 2.3.28.1 allows remote attackers to
    bypass intended access restrictions and conduct redirection attacks via a crafted
    request.
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">=2.3.20 <=2.3.28.1"
  package_manager: maven
  cve:
  - CVE-2016-4433
  disclosed_date: 2016-07-04
  created_date: 2016-07-04
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://jvn.jp/en/jp/JVN45093481/index.html
  - http://jvndb.jvn.jp/jvndb/JVNDB-2016-000112
  - http://www-01.ibm.com/support/docview.wss?uid=ssg1S1009282
  - http://www-01.ibm.com/support/docview.wss?uid=swg21987854
  - http://www.securityfocus.com/bid/91282
  - https://bugzilla.redhat.com/show_bug.cgi?id=1348251
  - https://struts.apache.org/docs/s2-039.html
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: ossindex:maven:org.apache.struts.xwork:xwork-core:8399926076
  title: "[CVE-2016-4465]  Improper Input Validation"
  description: The URLValidator class in Apache Struts 2 2.3.20 through 2.3.28.1 and
    2.5.x before 2.5.1 allows remote attackers to cause a denial of service via a
    null value for a URL field.
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - "> >=2.3.20 <=2.3.28.1"
  - "> >=2.5.0 <2.5.1"
  package_manager: maven
  cve:
  - CVE-2016-4465
  disclosed_date: 2016-07-04
  created_date: 2016-07-04
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://jvn.jp/en/jp/JVN12352818/index.html
  - http://jvndb.jvn.jp/jvndb/JVNDB-2016-000114
  - http://www-01.ibm.com/support/docview.wss?uid=swg21987854
  - http://www.securityfocus.com/bid/91278
  - https://bugzilla.redhat.com/show_bug.cgi?id=1348253
  - https://struts.apache.org/docs/s2-041.html
  source_url: https://ossindex.net/resource/package/7015343167/vulnerabilities
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30785
  title: Cross-site Scripting (XSS)
  description: |+
    [org.apache.struts.xwork:xwork-core][1] is a generic command pattern
    framework. It forms the core of Struts 2.

    Affected versions of this package are vulnerable to multiple Cross-site
    Scripting (XSS) vulnerabilities allowing remote attackers to inject
    arbitrary web script or HTML via vectors involving (1) an action name,
    (2) the action attribute of an `s:submit` element, or (3) the method
    attribute of an `s:submit` element.



    [1]: https://mvnrepository.com/artifact/org.apache.struts.xwork/xwork-core
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2.0.0 < 2.2.3"
  severity: low
  package_manager: maven
  cve:
  - CVE-2011-1772
  cwe:
  - CWE-79
  disclosed_date: 2014-01-10
  created_date: 2014-01-10
  last_modified_date: 2014-01-10
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-1772
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30785
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30786
  title: Information Exposure
  description: |
    [`org.apache.struts.xwork:xwork-core`][1] XWork 2.2.1 in Apache Struts
    2.2.1, and OpenSymphony XWork in OpenSymphony WebWork, allows remote
    attackers to obtain potentially sensitive information about internal
    Java class paths via vectors involving an s:submit element and a
    nonexistent method, a different vulnerability than CVE-2011-1772.3.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xwork-core%22
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2.2.1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2011-2088
  cwe:
  - CWE-200
  disclosed_date: 2014-01-09
  created_date: 2014-01-09
  last_modified_date: 2014-01-09
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-2088
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30786
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30787
  title: Authorization Bypass
  description: |
    [`org.apache.struts.xwork:xwork-core`][1] Affected versions of the
    package are vulnerable to Arbitrary Command Execution. A malicious user
    may bypass all the protections (regex pattern, deny method invocation)
    built into the ParametersInterceptor, thus being able to inject a
    malicious expression in any exposed string variable for further
    evaluation.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xwork-core%22
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2 < 2.3.1.2"
  severity: high
  package_manager: maven
  cve:
  - CVE-2011-3923
  cwe:
  - CWE-639
  disclosed_date: 2015-10-19
  created_date: 2015-10-19
  last_modified_date: 2015-10-19
  credit:
  - Meder Kydyraliev
  references:
  - https://struts.apache.org/docs/s2-009.html
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30787
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30788
  title: Improper Input Validation
  description: |
    [`org.apache.struts.xwork:xwork-core`][1] The ExceptionDelegator
    component in Apache Struts before 2.2.3.1 interprets parameter values as
    OGNL expressions during certain exception handling for mismatched data
    types of properties, which allows remote attackers to execute arbitrary
    Java code via a crafted parameter.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xwork-core%22
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2.0.0 < 2.2.3.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2012-0391
  cwe:
  - CWE-20
  disclosed_date: 2014-06-17
  created_date: 2014-06-17
  last_modified_date: 2014-06-17
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-0391
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30788
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30789
  title: Arbitrary Command Execution
  description: |
    [`org.apache.struts.xwork:xwork-core`][1] The CookieInterceptor
    component in Apache Struts before 2.3.1.1 does not use the
    parameter-name whitelist, which allows remote attackers to execute
    arbitrary commands via a crafted HTTP Cookie header that triggers Java
    code execution through a static method.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xwork-core%22
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2 < 2.3.1.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2012-0392
  cwe:
  - CWE-264
  disclosed_date: 2014-06-17
  created_date: 2014-06-17
  last_modified_date: 2014-06-17
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-0392
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30789
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30790
  title: Arbitrary Fie Overwrite
  description: |
    [`org.apache.struts.xwork:xwork-core`][1] The ParameterInterceptor
    component in Apache Struts before 2.3.1.1 does not prevent access to
    public constructors, which allows remote attackers to create or
    overwrite arbitrary files via a crafted parameter that triggers the
    creation of a Java object.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xwork-core%22
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2 < 2.3.1.1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2012-0393
  cwe:
  - CWE-264
  disclosed_date: 2014-06-17
  created_date: 2014-06-17
  last_modified_date: 2014-06-17
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-0393
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30790
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30791
  title: Arbitrary Code Execution
  description: |
    [`org.apache.struts.xwork:xwork-core`][1] \*\* DISPUTED \*\* The
    DebuggingInterceptor component in Apache Struts before 2.3.1.1, when
    developer mode is used, allows remote attackers to execute arbitrary
    commands via unspecified vectors. NOTE: the vendor characterizes this
    behavior as not \"a security vulnerability itself.\"



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xwork-core%22
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2 < 2.3.1.1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2012-0394
  cwe:
  - CWE-94
  disclosed_date: 2014-06-17
  created_date: 2014-06-17
  last_modified_date: 2014-06-17
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-0394
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30791
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30792
  title: Improper Input Validation
  description: |
    [org.apache.struts.xwork:xwork-core][1] is a generic command pattern
    framework. It forms the core of Struts 2.

    Affected versions of this package are vulnerable to Improper Input
    Validation. It evaluates a string as an OGNL expression during the
    handling of a conversion error, which allows remote attackers to modify
    run-time data values, and consequently execute arbitrary code, via
    invalid input to a field.



    [1]: https://mvnrepository.com/artifact/org.apache.struts.xwork/xwork-core
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2.0.0 < 2.2.3.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2012-0838
  cwe:
  - CWE-20
  disclosed_date: 2014-06-17
  created_date: 2014-06-17
  last_modified_date: 2014-06-17
  credit:
  - Unknown
  references:
  - https://github.com/apache/struts/commit/5f54b8d087f5125d96838aafa5f64c2190e6885b
  - https://github.com/apache/struts/commit/b4265d369dc29d57a9f2846a85b26598e83f3892
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-0838
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30792
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30793
  title: Denial of Service (DoS)
  description: |+
    [org.apache.struts.xwork:xwork-core][1] is a generic command pattern
    framework. It forms the core of Struts 2.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS). It allows remote attackers to cause a denial of service (CPU
    consumption) via a long parameter name, which is processed as an OGNL
    expression.



    [1]: https://mvnrepository.com/artifact/org.apache.struts.xwork/xwork-core
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2.0.0 < 2.3.4.1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2012-4387
  cwe:
  - CWE-264
  disclosed_date: 2014-01-24
  created_date: 2014-01-24
  last_modified_date: 2014-01-24
  credit:
  - Johno Crawford
  references:
  - https://github.com/apache/struts/commit/80e03182d66d9e6ab18f9a9a9b3c42725a1c89e9
  - https://issues.apache.org/jira/browse/WW-3860
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-4387
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30793
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30794
  title: Arbitrary Code Execution
  description: |
    [`org.apache.struts.xwork:xwork-core`][1] Apache Struts 2 before
    2.3.14.1 allows remote attackers to execute arbitrary OGNL code via a
    crafted request that is not properly handled when using the
    includeParams attribute in the (1) URL or (2) A tag.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xwork-core%22
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2 < 2.3.14.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2013-1966
  cwe:
  - CWE-94
  disclosed_date: 2014-06-08
  created_date: 2014-06-08
  last_modified_date: 2014-06-08
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-1966
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30794
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30795
  title: Arbitrary Code Execution
  description: |
    [org.apache.struts.xwork:xwork-core][1] is a generic command pattern
    framework. It forms the core of Struts 2.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. It allows remote attackers to execute arbitrary OGNL code via
    a request with a crafted value that contains both \"$\{}\" and \"%\{}\"
    sequences, which causes the OGNL code to be evaluated twice.



    [1]: https://mvnrepository.com/artifact/org.apache.struts.xwork/xwork-core
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2.0.0 < 2.3.14.3"
  severity: high
  package_manager: maven
  cve:
  - CVE-2013-2135
  cwe:
  - CWE-94
  disclosed_date: 2014-06-08
  created_date: 2014-06-08
  last_modified_date: 2014-06-08
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-2135
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30795
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30796
  title: Arbitrary Code Execution
  description: |
    [`org.apache.struts.xwork:xwork-core`][1] ParametersInterceptor in
    Apache Struts before 2.3.16.2 does not properly restrict access to the
    getClass method, which allows remote attackers to \"manipulate\" the
    ClassLoader and execute arbitrary code via a crafted request. NOTE: this
    vulnerability exists because of an incomplete fix for CVE-2014-0094.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xwork-core%22
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2.0.0 < 2.3.16.2"
  severity: high
  package_manager: maven
  cve:
  - CVE-2014-0112
  cwe:
  - CWE-264
  disclosed_date: 2014-06-06
  created_date: 2014-06-06
  last_modified_date: 2014-06-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0112
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30796
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30797
  title: Arbitrary Code Execution
  description: |
    [`org.apache.struts.xwork:xwork-core`][1] The default exclude patterns
    (excludeParams) in Apache Struts 2.3.20 allow remote attackers to
    \"compromise internal state of an application\" via unspecified vectors.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xwork-core%22
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2.3.20"
  severity: high
  package_manager: maven
  cve:
  - CVE-2015-1831
  cwe:
  - CWE-94
  disclosed_date: 2015-07-17
  created_date: 2015-07-17
  last_modified_date: 2015-07-17
  credit:
  - Jasper Rosenberg
  references:
  - https://struts.apache.org/docs/s2-024.html
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-1831
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30797
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30798
  title: Parameter Alteration
  description: |
    [`org.apache.struts.xwork:xwork-core`][1] Affected versions of the
    package are vulnerable to Parameter Alteration. ValueStack defines
    special top object which represents root of execution context. It can be
    used to manipulate Struts\' internals or can be used to affect
    container\'s settings



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xwork-core%22
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2 < 2.3.24.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2015-5209
  cwe:
  - CWE-235
  disclosed_date: 2015-09-28
  created_date: 2015-09-28
  last_modified_date: 2015-09-28
  credit:
  - rskvp93
  references:
  - https://struts.apache.org/docs/s2-026.html
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30798
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30799
  title: Improper Input Validation
  description: |
    [`org.apache.struts.xwork:xwork-core`][1] Apache Struts 2.x before
    2.3.28 allows remote attackers to execute arbitrary code via a \"%\{}\"
    sequence in a tag attribute, aka forced double OGNL evaluation.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xwork-core%22
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2 < 2.3.28"
  severity: high
  package_manager: maven
  cve:
  - CVE-2016-0785
  cwe:
  - CWE-20
  disclosed_date: 2016-03-16
  created_date: 2016-03-16
  last_modified_date: 2016-03-16
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-0785
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30799
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30800
  title: Cross-site Scripting (XSS)
  description: |+
    [`org.apache.struts.xwork:xwork-core`][1] Apache Struts 2.x before
    2.3.25 does not sanitize text in the Locale object constructed by
    I18NInterceptor, which might allow remote attackers to conduct
    cross-site scripting (XSS) attacks via unspecified vectors involving
    language display.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xwork-core%22
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2 < 2.3.25"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2016-2162
  cwe:
  - CWE-79
  disclosed_date: 2016-03-16
  created_date: 2016-03-16
  last_modified_date: 2016-03-16
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-2162
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30800
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30801
  title: Improper Input Validation
  description: |
    [`org.apache.struts.xwork:xwork-core`][1] Apache Struts 2.0.0 through
    2.3.24.1 does not properly cache method references when used with OGNL
    before 3.0.12, which allows remote attackers to cause a denial of
    service (block access to a web site) via unspecified vectors.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xwork-core%22
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2 <= 2.3.24.1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2016-3093
  cwe:
  - CWE-20
  disclosed_date: 2016-06-02
  created_date: 2016-06-02
  last_modified_date: 2016-06-02
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-3093
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30801
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30802
  title: Improper Input Validation
  description: |
    [`org.apache.struts.xwork:xwork-core`][1] Apache Struts 2 2.3.20 through
    2.3.28.1 allows remote attackers to bypass intended access restrictions
    and conduct redirection attacks via a crafted request.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xwork-core%22
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2.3.20 <= 2.3.28.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2016-4433
  cwe:
  - CWE-20
  disclosed_date: 2016-06-21
  created_date: 2016-06-21
  last_modified_date: 2016-06-21
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-4433
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30802
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30803
  title: Arbitrary Code Execution
  description: |
    [`org.apache.struts.xwork:xwork-core`][1] Affected versions of the
    package are vulnerable to Remote code Execution. The Apache Struts
    frameworks when forced, performs double evaluation of attributes\'
    values assigned to certain tags so it is possible to pass in a value
    that will be evaluated again when a tag\'s attributes will be rendered.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xwork-core%22
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2.2.1 <= 2.3.28.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2016-4461
  cwe:
  - CWE-264
  disclosed_date: 2016-11-14
  created_date: 2016-11-14
  last_modified_date: 2016-11-14
  credit:
  - Alvaro Munoz
  references:
  - https://struts.apache.org/docs/s2-036.html
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30803
- id: snykio:maven:org.apache.struts.xwork:xwork-core:30804
  title: Regular Expression Denial of Service (ReDoS)
  description: "[org.apache.struts.xwork:xwork-core][1] is a generic command pattern\nframework.
    It forms the core of Struts 2.\n\nAffected versions of this package are vulnerable
    to Regular Expression\nDenial of Service (ReDoS). The URLValidator class allows
    remote\nattackers to cause a denial of service via a null value for a URL field.\n\n\n\n[1]:
    https://mvnrepository.com/artifact/org.apache.struts.xwork/xwork-core\n\\nDenial
    of Service (DoS) describes a family of attacks, all aimed at\nmaking a system
    inaccessible to its original and legitimate users. There\nare many types of DoS
    attacks, ranging from trying to clog the network\npipes to the system by generating
    a large volume of traffic from many\nmachines (a Distributed Denial of Service
    - DDoS - attack) to sending\ncrafted requests that cause a system to crash or
    take a disproportional\namount of time to process.\n\nThe Regular expression Denial
    of Service (ReDoS) is a type of Denial of\nService attack. Regular expressions
    are incredibly powerful, but they\naren\\'t very intuitive and can ultimately
    end up making it easy for\nattackers to take your site down.\n\nLet’s take the
    following regular expression as an example:\n\n    regex = /A(B|C+)+D/\n{: .language-js}\n\nThis
    regular expression accomplishes the following:\n\n* `A` The string must start
    with the letter \\'A\\'\n* `(B|C+)+` The string must then follow the letter A
    with either the\n  letter \\'B\\' or some number of occurrences of the letter
    \\'C\\' (the\n  `+` matches one or more times). The `+` at the end of this section\n
    \ states that we can look for one or more matches of this section.\n* `D` Finally,
    we ensure this section of the string ends with a \\'D\\'\n\nThe expression would
    match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD`\nand `ACCCCCD`\n\nIt most cases,
    it doesn\\'t take very long for a regex engine to find a\nmatch:\n\n    $ time
    node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n    0.04s user
    0.01s system 95% cpu 0.052 total\n    \n    $ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n
    \   1.79s user 0.02s system 99% cpu 1.812 total\n{: .language-bash}\n\nThe entire
    process of testing it against a 30 characters long string\ntakes around ~52ms.
    But when given an invalid string, it takes nearly\ntwo seconds to complete the
    test, over ten times as long as it took to\ntest a valid string. The dramatic
    difference is due to the way regular\nexpressions get evaluated.\n\nMost Regex
    engines will work very similarly (with minor differences).\nThe engine will match
    the first possible way to accept the current\ncharacter and proceed to the next
    one. If it then fails to match the\nnext one, it will backtrack and see if there
    was another way to digest\nthe previous character. If it goes too far down the
    rabbit hole only to\nfind out the string doesn’t match in the end, and if many
    characters\nhave multiple valid regex paths, the number of backtracking steps
    can\nbecome very large, resulting in what is known as *catastrophic\nbacktracking*.\n\nLet\\'s
    look at how our expression runs into this problem, using a\nshorter string: \\\"ACCCX\\\".
    While it seems fairly straightforward, there\nare still four different ways that
    the engine could match those three\nC\\'s:\n\n1.  CCC\n2.  CC+C\n3.  C+CC\n4.
    \ C+C+C.\n\nThe engine has to try each of those combinations to see if any of
    them\npotentially match against the expression. When you combine that with the\nother
    steps the engine must take, we can use [RegEx 101 debugger][1] to\nsee the engine
    has to take a total of 38 steps before it can determine\nthe string doesn\\'t
    match.\n\nFrom there, the number of steps the engine must use to validate a string\njust
    continues to grow.\n\n| String | Number of C\\'s | Number of steps |\n|----------\n|
    ACCCX | 3 | 38 |\n| ACCCCX | 4 | 71 |\n| ACCCCCX | 5 | 136 |\n| ACCCCCCCCCCCCCCX
    | 14 | 65,553 |\n\nBy the time the string includes 14 C\\'s, the engine has to
    take over\n65,000 steps just to see if the string is valid. These extreme\nsituations
    can cause them to work very slowly (exponentially related to\ninput size, as shown
    above), allowing an attacker to exploit this and\ncan cause the service to excessively
    consume CPU, resulting in a Denial\nof Service.\n\n\n\n[1]: https://regex101.com/debugger\n"
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2.3.20 < 2.3.29"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2016-4465
  cwe:
  - CWE-20
  disclosed_date: 2016-06-20
  created_date: 2016-06-20
  last_modified_date: 2016-06-20
  credit:
  - Unknown
  references:
  - https://github.com/apache/struts/commit/a0fdca138feec2c2e94eb75ca1f8b76678b4d152
  - https://github.com/apache/struts/commit/eccc31ebce5430f9e91b9684c63eaaf885e603f9
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-30804
- id: snykio:maven:org.apache.struts.xwork:xwork-core:451611
  title: Command Injection
  description: |
    [org.apache.struts.xwork:xwork-core][1] is a generic command pattern
    framework. It forms the core of Struts 2.

    Affected versions of this package are vulnerable to Command Injection.
    When Dynamic Method Invocation was enabled, a remote attackers could
    execute arbitrary code via the prefix method, related to chained
    expressions.



    [1]: https://mvnrepository.com/artifact/org.apache.struts.xwork/xwork-core
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2.0.0 < 2.3.20.2"
  - ">= 2.3.24 < 2.3.24.2"
  - ">= 2.3.28 < 2.3.28.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2016-3081
  cwe:
  - CWE-77
  disclosed_date: 2016-04-22
  created_date: 2016-04-22
  last_modified_date: 2016-04-22
  credit:
  - Unknown
  references:
  - https://exploit-db.com/exploits/39756
  - https://github.com/apache/struts/commit/f238cf4f1091be19fbcfd086b042c86a1bcaa7fc
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-3081
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-451611
- id: snykio:maven:org.apache.struts.xwork:xwork-core:474418
  title: Insecure Defaults
  description: |
    [org.apache.struts.xwork:xwork-core][1] is a generic command pattern
    framework. It forms the core of Struts 2.

    Affected versions of this package are vulnerable to Insecure Defaults.
    The default exclude patterns (excludeParams) allow remote attackers to
    \"compromise internal state of an application\" via unspecified vectors.



    [1]: https://mvnrepository.com/artifact/org.apache.struts.xwork/xwork-core
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2.3.20 < 2.3.20.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2015-1831
  cwe:
  - CWE-453
  disclosed_date: 2015-05-11
  created_date: 2015-05-11
  last_modified_date: 2015-05-11
  credit:
  - Jasper Rosenberg
  references:
  - http://struts.apache.org/docs/s2-024.html
  - https://github.com/apache/struts/commit/5ebc0643b55d728a6713a82559a594d875452cd8
  - https://issues.apache.org/jira/browse/WW-4486
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-1831
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-474418
- id: snykio:maven:org.apache.struts.xwork:xwork-core:536487
  title: Arbitrary Code Injection
  description: |
    [org.apache.struts.xwork:xwork-core][1] is a generic command pattern
    framework. It forms the core of Struts 2.

    Affected versions of this package are vulnerable to Arbitrary Code
    Injection. It allows remote attackers to execute arbitrary OGNL code via
    a crafted parameter name that is not properly handled when invoking a
    redirect.



    [1]: https://mvnrepository.com/artifact/org.apache.struts.xwork/xwork-core
  affected_package: org.apache.struts.xwork:xwork-core
  vulnerable_versions:
  - ">= 2.0.0 < 2.3.14.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2013-1965
  cwe:
  - CWE-94
  disclosed_date: 2013-05-22
  created_date: 2013-05-22
  last_modified_date: 2013-05-22
  credit:
  - Unknown
  references:
  - http://struts.apache.org/docs/s2-012.html
  - https://github.com/apache/struts/commit/7e6f641ebb142663cbd1653dc49bed725edf7f56
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTSXWORK-536487
