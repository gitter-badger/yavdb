---
- id: ossindex:maven:org.bouncycastle:bcprov-jdk15:327514
  title: "[CVE-2007-6721] The Legion of the Bouncy Castle Java Cryptography API before
    release 1.38, as us..."
  description: The Legion of the Bouncy Castle Java Cryptography API before release
    1.38, as used in Crypto Provider Package before 1.36, has unknown impact and remote
    attack vectors related to "a Bleichenbacher vulnerability in simple RSA CMS signatures
    without signed attributes."
  affected_package: org.bouncycastle:bcprov-jdk15
  vulnerable_versions:
  - '1.0'
  - '1.01'
  - '1.02'
  - '1.03'
  - '1.04'
  - '1.05'
  - '1.06'
  - '1.07'
  - '1.08'
  - '1.09'
  - '1.10'
  - '1.11'
  - '1.12'
  - '1.13'
  - '1.14'
  - '1.15'
  - '1.16'
  - '1.17'
  - '1.18'
  - '1.19'
  - '1.20'
  - '1.21'
  - '1.22'
  - '1.23'
  - '1.24'
  - '1.25'
  - '1.26'
  - '1.27'
  - '1.28'
  - '1.29'
  - 1.3.1
  - '1.30'
  - '1.31'
  - '1.32'
  - '1.33'
  - '1.34'
  - '1.35'
  - '1.36'
  - '1.37'
  package_manager: maven
  cve:
  - CVE-2007-6721
  disclosed_date: 2009-03-30
  created_date: 2009-03-30
  last_modified_date: 2017-04-15
  credit:
  - OSSIndex
  references:
  - http://freshmeat.net/projects/bouncycastlecryptoapi/releases/265580
  - http://www.bouncycastle.org/csharp/
  - http://www.bouncycastle.org/devmailarchive/msg08195.html
  - http://www.bouncycastle.org/releasenotes.html
  - http://www.osvdb.org/50358
  - http://www.osvdb.org/50359
  - http://www.osvdb.org/50360
  source_url: https://ossindex.net/resource/package/7015332984/vulnerabilities
- id: ossindex:maven:org.bouncycastle:bcprov-jdk15:355379
  title: "[CVE-2013-1624]  Cryptographic Issues"
  description: The TLS implementation in the Bouncy Castle Java library before 1.48
    and C# library before 1.8 does not properly consider timing side-channel attacks
    on a noncompliant MAC check operation during the processing of malformed CBC padding,
    which allows remote attackers to conduct distinguishing attacks and plaintext-recovery
    attacks via statistical analysis of timing data for crafted packets, a related
    issue to CVE-2013-0169.
  affected_package: org.bouncycastle:bcprov-jdk15
  vulnerable_versions:
  - "<1.48"
  package_manager: maven
  cve:
  - CVE-2013-1624
  disclosed_date: 2013-02-08
  created_date: 2013-02-08
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://openwall.com/lists/oss-security/2013/02/05/24
  - http://rhn.redhat.com/errata/RHSA-2014-0371.html
  - http://rhn.redhat.com/errata/RHSA-2014-0372.html
  - http://secunia.com/advisories/57716
  - http://secunia.com/advisories/57719
  - http://www.isg.rhul.ac.uk/tls/TLStiming.pdf
  source_url: https://ossindex.net/resource/package/7015332984/vulnerabilities
- id: ossindex:maven:org.bouncycastle:bcprov-jdk15:8396562328
  title: "[CVE-2015-7940]  Information Exposure, Cryptographic Issues"
  description: The Bouncy Castle Java library before 1.51 does not validate a point
    is withing the elliptic curve, which makes it easier for remote attackers to obtain
    private keys via a series of crafted elliptic curve Diffie Hellman (ECDH) key
    exchanges, aka an "invalid curve attack."
  affected_package: org.bouncycastle:bcprov-jdk15
  vulnerable_versions:
  - '1.50'
  package_manager: maven
  cve:
  - CVE-2015-7940
  disclosed_date: 2015-11-09
  created_date: 2015-11-09
  last_modified_date: 2017-04-15
  credit:
  - OSSIndex
  references:
  - http://lists.fedoraproject.org/pipermail/package-announce/2016-January/174915.html
  - http://lists.opensuse.org/opensuse-security-announce/2015-11/msg00012.html
  - http://rhn.redhat.com/errata/RHSA-2016-2035.html
  - http://rhn.redhat.com/errata/RHSA-2016-2036.html
  - http://web-in-security.blogspot.ca/2015/09/practical-invalid-curve-attacks.html
  - http://www.debian.org/security/2015/dsa-3417
  - http://www.openwall.com/lists/oss-security/2015/10/22/7
  - http://www.openwall.com/lists/oss-security/2015/10/22/9
  - http://www.oracle.com/technetwork/security-advisory/cpujul2017-3236622.html
  - http://www.oracle.com/technetwork/security-advisory/cpuoct2016-2881722.html
  - http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html
  - http://www.securityfocus.com/bid/79091
  - http://www.securitytracker.com/id/1037036
  - http://www.securitytracker.com/id/1037046
  - http://www.securitytracker.com/id/1037053
  source_url: https://ossindex.net/resource/package/7015332984/vulnerabilities
- id: ossindex:maven:org.bouncycastle:bcprov-jdk15:8398915630
  title: "[CVE-2016-2427]  Information Exposure"
  description: '** DISPUTED ** The AES-GCM specification in RFC 5084, as used in Android
    5.x and 6.x, recommends 12 octets for the aes-ICVlen parameter field, which might
    make it easier for attackers to defeat a cryptographic protection mechanism and
    discover an authentication key via a crafted application, aka internal bug 26234568.  NOTE:
    The vendor disputes the existence of this potential issue in Android, stating
    "This CVE was raised in error: it referred to the authentication tag size in GCM,
    whose default according to ASN.1 encoding (12 bytes) can lead to vulnerabilities.
    After careful consideration, it was decided that the insecure default value of
    12 bytes was a default only for the encoding and not default anywhere else in
    Android, and hence no vulnerability existed."'
  affected_package: org.bouncycastle:bcprov-jdk15
  vulnerable_versions:
  - '1.54'
  package_manager: maven
  cve:
  - CVE-2016-2427
  disclosed_date: 2016-04-18
  created_date: 2016-04-18
  last_modified_date: 2017-04-15
  credit:
  - OSSIndex
  references:
  - http://source.android.com/security/bulletin/2016-04-02.html
  - https://android.googlesource.com/platform/external/bouncycastle/+/b3bddea0f33c0459293c6419569ad151b4a7b44b
  - https://android.googlesource.com/platform/libcore/+/efd369d996fd38c50a50ea0de8f20507253cb6de
  source_url: https://ossindex.net/resource/package/7015332984/vulnerabilities
- id: snykio:maven:org.bouncycastle:bcprov-jdk15:31045
  title: Cryptographic Issues
  description: |
    [org.bouncycastle:bcprov-jdk15][1] is a package is a Java implementation
    of cryptographic algorithms. This jar contains JCE provider and
    lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5.

    Affected versions of this package are vulnerable to Cryptographic
    Issues. The TLS implementation does not properly consider timing
    side-channel attacks on a noncompliant MAC check operation during the
    processing of malformed CBC padding, which allows remote attackers to
    conduct distinguishing attacks and plaintext-recovery attacks via
    statistical analysis of timing data for crafted packets, a related issue
    to [CVE-2013-0169][2].



    [1]: https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15
    [2]: https://nvd.nist.gov/vuln/detail/CVE-2013-0169
  affected_package: org.bouncycastle:bcprov-jdk15
  vulnerable_versions:
  - ">= 0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2013-1624
  cwe:
  - CWE-310
  disclosed_date: 2013-02-08
  created_date: 2014-06-08
  last_modified_date: 2014-06-08
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-1624
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-31045
- id: snykio:maven:org.bouncycastle:bcprov-jdk15:31046
  title: Invalid Curve Attacks
  description: |
    [org.bouncycastle:bcprov-jdk15][1] is a package is a Java implementation
    of cryptographic algorithms. This jar contains JCE provider and
    lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5.

    Affected versions of this package are vulnerable to Invalid Curve
    Attacks. Elliptic Curve Cryptography (ECC) is used in key exchange
    protocolsdigital signatures, or for pseudo-random number generators. An
    elliptic curve in cryptography is a set of points over a finite field
    satisfying the following equation: `y^2 = x^3 + ax + b`. On the elliptic
    curve, a single operation can be executed: point addition.

    Elliptic curve Diffieâ€“Hellman (ECDH) is an anonymous key exchange
    protocol that allows two parties (say, between a client and server) to
    establish a shared secret over an insecure channel.

    An Invalid Curve Attack occurs when a client forces the server to
    compute a common secret using a point outside of the defined curve. The
    server may disclose information, allowing a skilled attacker to
    calculate the secret key.



    [1]: https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15
  affected_package: org.bouncycastle:bcprov-jdk15
  vulnerable_versions:
  - ">= 0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2015-7940
  cwe:
  - CWE-310
  disclosed_date: 2015-10-22
  created_date: 2015-10-22
  last_modified_date: 2015-10-22
  credit:
  - Unknown
  references:
  - http://web-in-security.blogspot.co.il/2015/09/practical-invalid-curve-attacks.html
  - http://www.openwall.com/lists/oss-security/2015/10/22/7
  - https://github.com/bcgit/bc-java/commit/5cb2f0578e6ec8f0d67e59d05d8c4704d8e05f83
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-7940
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-31046
- id: snykio:maven:org.bouncycastle:bcprov-jdk15:31657
  title: Hash Collision
  description: |
    [org.bouncycastle:bcprov-jdk15][1] is a package is a Java implementation
    of cryptographic algorithms. This jar contains JCE provider and
    lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5.

    Affected versions of this package are vulnerable to Hash Collision. Hash
    Collision is possible within BKS due to an error in the BKS version 1
    keystore files.

    BKS is a keystore format, designed to function similarly to a Sun/Oracle
    JKS keystore. BKS files can contain public keys, private keys and
    certificates, and they rely on a password-based encryption to provide
    confidentiality and integrity protections to the keystore contents.

    The first version of a BKS file (aka `BKS-V1`) contained a design flaw
    when determining the key size used to protect the keystore data. It used
    the `SHA-1` hash function, which is 160 bits in length. In a
    `RFC7292-compliant` cryptographic algorithm, the MAC key size should be
    the same size as the hash function being used, meaning that the MAC key
    size should be 160 bits long for BKS files.

    However, Bouncy Castle BKS-V1 files uses only 16 bits for the MAC key
    size. Regardless of the complexity of the password, ghe BKS-V1 file will
    have merely 65,536 different encryption keys. An attacker may bruteforce
    this password in a matter of seconds by testing all 65K values.



    [1]: https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15
  affected_package: org.bouncycastle:bcprov-jdk15
  vulnerable_versions:
  - ">= 0"
  severity: high
  package_manager: maven
  cve:
  - CVE-2018-5382
  cwe:
  - CWE-916
  disclosed_date: 2018-03-18
  created_date: 2018-04-02
  last_modified_date: 2018-04-02
  credit:
  - Will Dormann
  references:
  - https://github.com/bcgit/bc-java/commit/81b00861cd5711e85fe8dce2a0e119f684120255
  - https://insights.sei.cmu.edu/cert/2018/03/the-curious-case-of-the-bouncy-castle-bks-passwords.html
  - https://www.kb.cert.org/vuls/id/306792
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-31657
