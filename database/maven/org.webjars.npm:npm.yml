---
- id: snykio:maven:org.webjars.npm:npm:480060
  title: Access Restriction Bypass
  description: |
    [org.webjars.npm:npm][1] is a package manager for JavaScript.

    Affected versions of this package are vulnerable to Access Restriction
    Bypass. It might allow local users to bypass intended filesystem access
    restrictions due to ownerships of `/etc` and `/usr` directories are
    being changed unexpectedly, related to a \"correctMkdir\" issue.



    [1]: https://www.npmjs.com/package/npm
  affected_package: org.webjars.npm:npm
  vulnerable_versions:
  - "< 5.7.1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2018-7408
  cwe:
  - CWE-284
  disclosed_date: 2018-02-22
  created_date: 2018-03-21
  last_modified_date: 2018-03-21
  credit:
  - Unknown
  references:
  - https://github.com/npm/npm/commit/74e149da6efe6ed89477faa81fef08eee7999ad0
  - https://github.com/npm/npm/issues/19883
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-480060
- id: snykio:maven:org.webjars.npm:npm:537642
  title: Arbitrary File Overwrite
  description: |
    [org.webjars.npm:npm][1] is a package manager for JavaScript.

    Affected versions of this package are vulnerable to Arbitrary File
    Overwrite. It fails to prevent existing globally-installed binaries to
    be overwritten by other package installations. For example, if a package
    was installed globally and created a `serve` binary, any subsequent
    installs of packages that also create a `serve` binary would overwrite
    the first binary. This only affects files in `/usr/local/bin`.

    For `npm`, this behaviour is still allowed in local installations and
    also through install scripts. This vulnerability bypasses a user using
    the `--ignore-scripts` install option.



    [1]: https://www.npmjs.com/package/npm
  affected_package: org.webjars.npm:npm
  vulnerable_versions:
  - ">= 0"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-16777
  cwe:
  - CWE-22
  disclosed_date: 2019-12-11
  created_date: 2019-12-12
  last_modified_date: 2019-12-12
  credit:
  - Daniel Ruf
  references:
  - https://blog.daniel-ruf.de/critical-design-flaw-npm-pnpm-yarn/
  - https://blog.npmjs.org/post/189618601100/binary-planting-with-the-npm-cli
  - https://nodejs.org/en/blog/vulnerability/december-2019-security-releases/
  - https://snyk.io/blog/understanding-filesystem-takeover-vulnerabilities-in-npm-javascript-package-manager
  - https://www.npmjs.com/advisories/1437
  - https://www.npmjs.com/advisories/1438
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-537642
- id: snykio:maven:org.webjars.npm:npm:537643
  title: Unauthorized File Access
  description: |
    [org.webjars.npm:npm][1] is a package manager for JavaScript.

    Affected versions of this package are vulnerable to Unauthorized File
    Access. It is possible for packages to create symlinks to files outside
    of the`node_modules` folder through the `bin` field upon installation.

    For `npm`, a properly constructed entry in the `package.json` bin field
    would allow a package publisher to create a symlink pointing to
    arbitrary files on a user’s system when the package is installed. This
    behaviour is possible through install scripts. This vulnerability
    bypasses a user using the `--ignore-scripts` install option.



    [1]: https://www.npmjs.com/package/npm
  affected_package: org.webjars.npm:npm
  vulnerable_versions:
  - ">= 0"
  severity: low
  package_manager: maven
  cve:
  - CVE-2019-16775
  cwe:
  - CWE-552
  disclosed_date: 2019-12-11
  created_date: 2019-12-12
  last_modified_date: 2019-12-12
  credit:
  - Daniel Ruf
  references:
  - https://blog.daniel-ruf.de/critical-design-flaw-npm-pnpm-yarn/
  - https://nodejs.org/en/blog/vulnerability/december-2019-security-releases/
  - https://www.npmjs.com/advisories/1435
  - https://www.npmjs.com/advisories/1436
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-537643
- id: snykio:maven:org.webjars.npm:npm:537644
  title: Arbitrary File Write
  description: |
    [org.webjars.npm:npm][1] is a package manager for JavaScript.

    Affected versions of this package are vulnerable to Arbitrary File
    Write. It fails to prevent access to folders outside of the intended
    `node_modules` folder through the bin field.

    For `npm`, a properly constructed entry in the `package.json` bin field
    would allow a package publisher to modify and/or gain access to
    arbitrary files on a user’s system when the package is installed. This
    behaviour is possible through install scripts. This vulnerability
    bypasses a user using the `--ignore-scripts install` option.



    [1]: https://www.npmjs.com/package/npm
  affected_package: org.webjars.npm:npm
  vulnerable_versions:
  - ">= 0"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-16776
  cwe:
  - CWE-22
  disclosed_date: 2019-12-11
  created_date: 2019-12-12
  last_modified_date: 2019-12-12
  credit:
  - Daniel Ruf
  references:
  - https://blog.daniel-ruf.de/critical-design-flaw-npm-pnpm-yarn/
  - https://nodejs.org/en/blog/vulnerability/december-2019-security-releases/
  - https://snyk.io/blog/understanding-filesystem-takeover-vulnerabilities-in-npm-javascript-package-manager/
  - https://www.npmjs.com/advisories/1427
  - https://www.npmjs.com/advisories/1434
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-537644
- id: snykio:maven:org.webjars.npm:npm:538740
  title: npm Token Leak
  description: |+
    This vulnerability could cause the unintentional leakage of bearer
    tokens. A design flaw in npm\'s registry allows an attacker to set up an
    HTTP server that could collect authentication information, and then use
    this authentication information to impersonate the users whose tokens
    they collected. The attacker could do anything the compromised users
    could do, including publishing new versions of packages.

    \nThe primary npm registry has, since late 2014, used HTTP bearer tokens
    to authenticate requests from the npm command-line interface. Due to a
    design flaw in the CLI, these bearer tokens were sent with every request
    made by logged-in users, regardless of the destination of the request.
    (The bearers only should have been included for requests made against a
    registry or registries used for the current install.)

    This flaw allows an attacker to set up an HTTP server that could collect
    authentication information. They could then use this information to
    impersonate the users whose tokens they collected. This impersonation
    would allow them to do anything the compromised users could do,
    including publishing new versions of packages.

    With the fixes npm have released, the CLI will only send bearer tokens
    with requests made against a registry. npm’s CLI team believe that the
    fix won’t break any existing registry setups. However, it’s possible the
    change will be breaking in some cases, due to the large number of
    registry software suites used.

  affected_package: org.webjars.npm:npm
  vulnerable_versions:
  - "< 3.8.6"
  severity: medium
  package_manager: maven
  cwe:
  - CWE-200
  disclosed_date: 2016-04-18
  created_date: 2016-04-20
  last_modified_date: 2016-04-20
  credit:
  - James Taylor
  - Max Motovilov
  - Mitar
  - Will White & the team at Mapbox
  references:
  - http://blog.npmjs.org/post/142036323955/fixing-a-bearer-token-vulnerability
  - https://github.com/npm/npm/commit/fea8cc92cee02c720b58f95f14d315507ccad401
  - https://github.com/npm/npm/issues/8380
  - https://nodejs.org/en/blog/vulnerability/npm-tokens-leak-march-2016/
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-538740
