---
- id: snykio:maven:net.jpountz.lz4:lz4:30458
  title: Denial of Service (DoS)
  description: |+
    [net.jpountz.lz4:lz4][1] is a package for LZ4 compression for Java

    Affected versions of this package are vulnerable to Denial of Service
    (DoS). Integer overflow in the LZ4 algorithm implementation, as used in
    Yann Collet LZ4 before r118 and in the `lz4_uncompress` function in
    `lib/lz4/lz4_decompress.c` in the Linux kernel before 3.15.2, on 32-bit
    platforms might allow context-dependent attackers to cause a denial of
    service (memory corruption) or possibly have unspecified other impact
    via a crafted Literal Run that would be improperly handled by programs
    not complying with an API limitation, a different vulnerability than
    CVE-2014-4715.



    [1]: https://github.com/lz4/lz4-java
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: net.jpountz.lz4:lz4
  vulnerable_versions:
  - "< 1.3.0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-4611
  cwe:
  - CWE-20
  disclosed_date: 2014-07-03
  created_date: 2016-05-23
  last_modified_date: 2016-05-23
  credit:
  - Unknown
  references:
  - https://github.com/jpountz/lz4-java/commit/8090284100232189632d06881cab14e585d4c08e
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-4611
  source_url: https://snyk.io/vuln/SNYK-JAVA-NETJPOUNTZLZ4-30458
- id: snykio:maven:net.jpountz.lz4:lz4:30459
  title: Denial of Service (DoS)
  description: |+
    [`net.jpountz.lz4:lz4`][1] Yann Collet LZ4 before r119, when used on
    certain 32-bit platforms that allocate memory beyond 0x80000000, does
    not properly detect integer overflows, which allows context-dependent
    attackers to cause a denial of service (memory corruption) or possibly
    have unspecified other impact via a crafted Literal Run, a different
    vulnerability than \[CVE-2014-4611\].



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22lz4%22
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: net.jpountz.lz4:lz4
  vulnerable_versions:
  - "< 1.3.0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-4715
  cwe:
  - CWE-189
  disclosed_date: 2014-07-03
  created_date: 2016-05-23
  last_modified_date: 2016-05-23
  credit:
  - Unknown
  references:
  - https://github.com/jpountz/lz4-java/commit/8090284100232189632d06881cab14e585d4c08e
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-4715
  source_url: https://snyk.io/vuln/SNYK-JAVA-NETJPOUNTZLZ4-30459
- id: snykio:maven:net.jpountz.lz4:lz4:473024
  title: Buffer Overflow
  description: |+
    `net.jpountz.lz4:lz4` is a None

    Affected versions of this package are vulnerable to Buffer Overflow. in
    `LZ4_write32` (related to `LZ4_compress_destSize`), affecting
    applications that call `LZ4_compress_fast` with a large input. (This
    issue can also lead to data corruption.)

  affected_package: net.jpountz.lz4:lz4
  vulnerable_versions:
  - ">= 0"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-17543
  cwe:
  - CWE-120
  disclosed_date: 2019-07-17
  created_date: 2019-10-14
  last_modified_date: 2019-10-14
  credit:
  - Unknown
  references:
  - https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=15941
  - https://github.com/lz4/lz4/pull/756
  - https://github.com/lz4/lz4/pull/760
  source_url: https://snyk.io/vuln/SNYK-JAVA-NETJPOUNTZLZ4-473024
