---
- id: snykio:maven:com.fasterxml.jackson.core:jackson-core:31519
  title: Denial of Service (DoS)
  description: |+
    [com.fasterxml.jackson.core:jackson-core][1] is a Core Jackson
    abstractions, basic JSON streaming API implementation

    Affected versions of this package are vulnerable to Denial of Service
    (DoS). If the REST endpoint consumes POST requests with JSON or XML data
    and data are invalid, the first unrecognized token is printed to
    server.log

    > If the first token is word of length 10MB, the whole word is printed.
    > This is potentially dangerous and can be used to attack the server by
    > filling the disk with logs.



    [1]: https://github.com/FasterXML/jackson-core
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: com.fasterxml.jackson.core:jackson-core
  vulnerable_versions:
  - "< 2.8.6"
  severity: medium
  package_manager: maven
  cwe:
  - CWE-399
  disclosed_date: 2017-01-12
  created_date: 2017-09-20
  last_modified_date: 2017-09-20
  credit:
  - Alessio Soldano
  references:
  - https://github.com/FasterXML/jackson-core/pull/322
  - https://issues.jboss.org/browse/JBEAP-6316
  source_url: https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-31519
- id: snykio:maven:com.fasterxml.jackson.core:jackson-core:31520
  title: Denial of Service (DoS)
  description: |+
    [com.fasterxml.jackson.core:jackson-core][1] is a Core Jackson
    abstractions, basic JSON streaming API implementation

    Affected versions of this package are vulnerable to Denial of Service
    (DoS). When `WRITE_BIGDECIMAL_AS_PLAIN` setting is enabled, Jackson will
    attempt to write out the whole number, no matter how large the exponent.
    The following sample code will trigger an out of memory exception:

        ObjectMapper mapper = new ObjectMapper().enable(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN);
        mapper.writeValueAsString(new java.math.BigDecimal("9.223372E+1010671858"));
    {: .language-java}



    [1]: https://github.com/FasterXML/jackson-core
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: com.fasterxml.jackson.core:jackson-core
  vulnerable_versions:
  - ">= 2.3.0-rc1 < 2.7.7"
  severity: medium
  package_manager: maven
  cwe:
  - CWE-399
  disclosed_date: 2016-08-25
  created_date: 2017-09-20
  last_modified_date: 2017-09-20
  credit:
  - gmethwin@github
  references:
  - https://github.com/FasterXML/jackson-core/commit/96642978dcf1b69cba68ec72cb2f652d59a8b5be
  - https://github.com/FasterXML/jackson-core/issues/315
  source_url: https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-31520
