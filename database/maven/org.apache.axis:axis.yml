---
- id: ossindex:maven:org.apache.axis:axis:323319
  title: "[CVE-2007-2353]  Information Exposure"
  description: Apache Axis 1.0 allows remote attackers to obtain sensitive information
    by requesting a non-existent WSDL file, which reveals the installation path in
    the resulting exception message.
  affected_package: org.apache.axis:axis
  vulnerable_versions:
  - '1.0'
  package_manager: maven
  cve:
  - CVE-2007-2353
  disclosed_date: 2007-04-30
  created_date: 2007-04-30
  last_modified_date: 2017-03-10
  credit:
  - OSSIndex
  references:
  - http://attrition.org/pipermail/vim/2007-April/001562.html
  - http://www.osvdb.org/34154
  - http://www.securityfocus.com/bid/23687
  - http://xforce.iss.net/xforce/xfdb/34167
  source_url: https://ossindex.net/resource/package/7015387979/vulnerabilities
- id: ossindex:maven:org.apache.axis:axis:353500
  title: "[CVE-2012-5784]  Improper Input Validation"
  description: Apache Axis 1.4 and earlier, as used in PayPal Payments Pro, PayPal
    Mass Pay, PayPal Transactional Information SOAP, the Java Message Service implementation
    in Apache ActiveMQ, and other products, does not verify that the server hostname
    matches a domain name in the subject's Common Name (CN) or subjectAltName field
    of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL
    servers via an arbitrary valid certificate.
  affected_package: org.apache.axis:axis
  vulnerable_versions:
  - '1.0'
  - '1.1'
  - '1.2'
  - 1.2.1
  - '1.3'
  - '1.4'
  package_manager: maven
  cve:
  - CVE-2012-5784
  disclosed_date: 2012-11-04
  created_date: 2012-11-04
  last_modified_date: 2017-04-26
  credit:
  - OSSIndex
  references:
  - http://activemq.apache.org/axis-and-cxf-support.html
  - http://rhn.redhat.com/errata/RHSA-2013-0269.html
  - http://rhn.redhat.com/errata/RHSA-2013-0683.html
  - http://rhn.redhat.com/errata/RHSA-2014-0037.html
  - http://secunia.com/advisories/51219
  - http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf
  - http://www.securityfocus.com/bid/56408
  - http://xforce.iss.net/xforce/xfdb/79829
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/79829
  source_url: https://ossindex.net/resource/package/7015387979/vulnerabilities
- id: ossindex:maven:org.apache.axis:axis:362463
  title: "[CVE-2014-3596] The getCN function in Apache Axis 1.4 and earlier does not
    properly verify that ..."
  description: 'The getCN function in Apache Axis 1.4 and earlier does not properly
    verify that the server hostname matches a domain name in the subject''s Common
    Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle
    attackers to spoof SSL servers via a certificate with a subject that specifies
    a common name in a field that is not the CN field.  NOTE: this issue exists because
    of an incomplete fix for CVE-2012-5784.'
  affected_package: org.apache.axis:axis
  vulnerable_versions:
  - '1.0'
  - '1.1'
  - '1.2'
  - 1.2.1
  - '1.3'
  - '1.4'
  package_manager: maven
  cve:
  - CVE-2014-3596
  disclosed_date: 2014-08-27
  created_date: 2014-08-27
  last_modified_date: 2017-03-10
  credit:
  - OSSIndex
  references:
  - http://linux.oracle.com/errata/ELSA-2014-1193.html
  - http://rhn.redhat.com/errata/RHSA-2014-1193.html
  - http://secunia.com/advisories/61222
  - http://www.openwall.com/lists/oss-security/2014/08/20/2
  - http://www.securityfocus.com/bid/69295
  - http://www.securitytracker.com/id/1030745
  - http://xforce.iss.net/xforce/xfdb/95377
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/95377
  - https://issues.apache.org/jira/browse/AXIS-2905
  source_url: https://ossindex.net/resource/package/7015387979/vulnerabilities
- id: snykio:maven:org.apache.axis:axis:30001
  title: Improper Validation of Certificate with Host Mismatch
  description: |
    [org.apache.axis:axis][1] is an implementation of the SOAP (\"Simple
    Object Access Protocol\") submission to W3C.

    Affected versions of this package are vulnerable to Improper Validation
    of Certificate with Host Mismatch. The getCN function does not properly
    verify that the server hostname matches a domain name in the subject\'s
    Common Name (CN) or subjectAltName field of the X.509 certificate, which
    allows man-in-the-middle attackers to spoof SSL servers via a
    certificate with a subject that specifies a common name in a field that
    is not the CN field. NOTE: this issue exists because of an incomplete
    fix for CVE-2012-5784.



    [1]: https://mvnrepository.com/artifact/org.apache.axis/axis
  affected_package: org.apache.axis:axis
  vulnerable_versions:
  - ">= 0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-3596
  cwe:
  - CWE-297
  disclosed_date: 2014-08-13
  created_date: 2014-08-13
  last_modified_date: 2014-08-13
  credit:
  - Arun Neelicattu
  - David Jorm
  references:
  - https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2014-3596
  - https://issues.apache.org/jira/browse/AXIS-2905
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-3596
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEAXIS-30001
- id: snykio:maven:org.apache.axis:axis:30521
  title: Improper Input Validation
  description: |+
    [org.apache.axis:axis][1] is an implementation of the SOAP (\"Simple
    Object Access Protocol\") submission to W3C.

    Affected versions of this package are vulnerable to Improper Input
    Validation. It does not verify the requesting server\'s hostname agains
    existing domain names in the SSL Certificate.



    [1]: https://mvnrepository.com/artifact/org.apache.axis/axis
    \nApache Axis 1.4 and earlier does not properly verify that the server
    hostname matches a domain name in the subject\'s `Common Name (CN)` or
    `subjectAltName` field of the X.509 certificate, which allows
    man-in-the-middle attackers to spoof SSL servers via an arbitrary valid
    certificate.

  affected_package: org.apache.axis:axis
  vulnerable_versions:
  - ">= 0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2012-5784
  cwe:
  - CWE-20
  disclosed_date: 2012-11-04
  created_date: 2014-06-17
  last_modified_date: 2014-06-17
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5784
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEAXIS-30521
- id: snykio:maven:org.apache.axis:axis:32456
  title: Cross-site Scripting (XSS)
  description: |+
    [Apache Axis][1] is an open-source, XML based Web service framework.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS) attacks due to not escaping namespace URIs.



    [1]: https://github.com/apache/axis1-java
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: org.apache.axis:axis
  vulnerable_versions:
  - ">= 1.4"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2018-8032
  cwe:
  - CWE-79
  disclosed_date: 2018-08-02
  created_date: 2018-08-02
  last_modified_date: 2018-08-02
  credit:
  - Unknown
  references:
  - http://mail-archives.apache.org/mod_mbox/axis-java-dev/201807.mbox/%3CJIRA.13170716.1531060536000.93536.1531060560060@Atlassian.JIRA%3E
  - https://github.com/apache/axis1-java/commit/e7ce8a92bc02be54da102efb64c99aeee21a2106
  - https://issues.apache.org/jira/browse/AXIS-2924
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEAXIS-32456
- id: victims:maven:org.apache.axis:axis:2014-3596
  title: 'Apache Axis: Improper hostname verification in certificate verification'
  description: 'The getCN function in Apache Axis 1.4 and earlier does not properly
    verify that the server hostname matches a domain name in the subject''s Common
    Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle
    attackers to spoof SSL servers via a certificate with a subject that specifies
    a common name in a field that is not the CN field. NOTE: this issue exists because
    of an incomplete fix for CVE-2012-5784.

'
  affected_package: org.apache.axis:axis
  vulnerable_versions:
  - "<=1.4"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-3596
  cvss_v2_score: 5.8
  credit:
  - Victims CVE Database
  references:
  - https://issues.apache.org/jira/browse/AXIS-2905
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-3596
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2014/3596.yaml
