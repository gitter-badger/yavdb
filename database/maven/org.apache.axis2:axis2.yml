---
- id: ossindex:maven:org.apache.axis2:axis2:339673
  title: "[CVE-2010-0219]  Credentials Management"
  description: Apache Axis2, as used in dswsbobje.war in SAP BusinessObjects Enterprise
    XI 3.2, CA ARCserve D2D r15, and other products, has a default password of axis2
    for the admin account, which makes it easier for remote attackers to execute arbitrary
    code by uploading a crafted web service.
  affected_package: org.apache.axis2:axis2
  vulnerable_versions:
  - '1.3'
  - '1.4'
  - 1.4.1
  - '1.5'
  - 1.5.1
  - 1.5.2
  - '1.6'
  package_manager: maven
  cve:
  - CVE-2010-0219
  disclosed_date: 2010-10-18
  created_date: 2010-10-18
  last_modified_date: 2017-03-10
  credit:
  - OSSIndex
  references:
  - http://retrogod.altervista.org/9sg_ca_d2d.html
  - http://secunia.com/advisories/41799
  - http://secunia.com/advisories/42763
  - http://spl0it.org/files/talks/source_barcelona10/Hacking%20SAP%20BusinessObjects.pdf
  - http://www.exploit-db.com/exploits/15869
  - http://www.kb.cert.org/vuls/id/989719
  - http://www.osvdb.org/70233
  - http://www.rapid7.com/security-center/advisories/R7-0037.jsp
  - http://www.securityfocus.com/archive/1/archive/1/514284/100/0/threaded
  - http://www.securitytracker.com/id?1024929
  - http://www.vupen.com/english/advisories/2010/2673
  - http://xforce.iss.net/xforce/xfdb/62523
  - https://kb.juniper.net/KB27373
  - https://service.sap.com/sap/support/notes/1432881
  source_url: https://ossindex.net/resource/package/7015387920/vulnerabilities
- id: ossindex:maven:org.apache.axis2:axis2:341034
  title: "[CVE-2010-1632]  Improper Input Validation"
  description: Apache Axis2 before 1.5.2, as used in IBM WebSphere Application Server
    (WAS) 7.0 through 7.0.0.12, IBM Feature Pack for Web Services 6.1.0.9 through
    6.1.0.32, IBM Feature Pack for Web 2.0 1.0.1.0, Apache Synapse, Apache ODE, Apache
    Tuscany, Apache Geronimo, and other products, does not properly reject DTDs in
    SOAP messages, which allows remote attackers to read arbitrary files, send HTTP
    requests to intranet servers, or cause a denial of service (CPU and memory consumption)
    via a crafted DTD, as demonstrated by an entity declaration in a request to the
    Synapse SimpleStockQuoteService.
  affected_package: org.apache.axis2:axis2
  vulnerable_versions:
  - '1.3'
  - '1.4'
  - 1.4.1
  - '1.5'
  - 1.5.1
  package_manager: maven
  cve:
  - CVE-2010-1632
  disclosed_date: 2010-06-22
  created_date: 2010-06-22
  last_modified_date: 2017-03-10
  credit:
  - OSSIndex
  references:
  - http://geronimo.apache.org/2010/07/21/apache-geronimo-v216-released.html
  - http://geronimo.apache.org/21x-security-report.html
  - http://geronimo.apache.org/22x-security-report.html
  - http://markmail.org/message/e4yiij7lfexastvl
  - http://secunia.com/advisories/40252
  - http://secunia.com/advisories/40279
  - http://secunia.com/advisories/41016
  - http://secunia.com/advisories/41025
  - http://www-01.ibm.com/support/docview.wss?uid=swg21433581
  - http://www.vupen.com/english/advisories/2010/1528
  - http://www.vupen.com/english/advisories/2010/1531
  - https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05289984
  - https://issues.apache.org/jira/browse/AXIS2-4450
  - https://issues.apache.org/jira/browse/GERONIMO-5383
  - https://svn.apache.org/repos/asf/axis/axis2/java/core/security/CVE-2010-1632.pdf
  source_url: https://ossindex.net/resource/package/7015387920/vulnerabilities
- id: ossindex:maven:org.apache.axis2:axis2:341473
  title: '[CVE-2010-2103]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: 'Cross-site scripting (XSS) vulnerability in axis2-admin/axis2-admin/engagingglobally
    in the administration console in Apache Axis2/Java 1.4.1, 1.5.1, and possibly
    other versions, as used in SAP Business Objects 12, 3com IMC, and possibly other
    products, allows remote attackers to inject arbitrary web script or HTML via the
    modules parameter.  NOTE: some of these details are obtained from third party
    information.'
  affected_package: org.apache.axis2:axis2
  vulnerable_versions:
  - 1.4.1
  - 1.5.1
  package_manager: maven
  cve:
  - CVE-2010-2103
  disclosed_date: 2010-05-27
  created_date: 2010-05-27
  last_modified_date: 2017-03-10
  credit:
  - OSSIndex
  references:
  - http://osvdb.org/64844
  - http://secunia.com/advisories/39906
  - http://spl0it.org/files/talks/source_barcelona10/Hacking%20SAP%20BusinessObjects.pdf
  - http://www.exploit-db.com/exploits/12689
  - http://www.procheckup.com/vulnerability_manager/vulnerabilities/pr10-03
  - http://www.securityfocus.com/archive/1/archive/1/511404/100/0/threaded
  - http://www.securityfocus.com/bid/40327
  - http://www.vupen.com/english/advisories/2010/1215
  - http://xforce.iss.net/xforce/xfdb/58790
  - https://kb.juniper.net/KB27373
  source_url: https://ossindex.net/resource/package/7015387920/vulnerabilities
- id: ossindex:maven:org.apache.axis2:axis2:352493
  title: "[CVE-2012-4418]  Improper Authentication"
  description: Apache Axis2 allows remote attackers to forge messages and bypass authentication
    via an "XML Signature wrapping attack."
  affected_package: org.apache.axis2:axis2
  vulnerable_versions:
  - "*"
  package_manager: maven
  cve:
  - CVE-2012-4418
  disclosed_date: 2012-10-09
  created_date: 2012-10-09
  last_modified_date: 2017-03-10
  credit:
  - OSSIndex
  references:
  - http://www.nds.rub.de/media/nds/veroeffentlichungen/2012/08/22/BreakingSAML_3.pdf
  - http://www.openwall.com/lists/oss-security/2012/09/12/1
  - http://www.openwall.com/lists/oss-security/2012/09/13/1
  - http://www.securityfocus.com/bid/55508
  - https://bugzilla.redhat.com/show_bug.cgi?id=856755
  source_url: https://ossindex.net/resource/package/7015387920/vulnerabilities
- id: ossindex:maven:org.apache.axis2:axis2:353226
  title: "[CVE-2012-5351]  Improper Authentication"
  description: Apache Axis2 allows remote attackers to forge messages and bypass authentication
    via a SAML assertion that lacks a Signature element, aka a "Signature exclusion
    attack," a different vulnerability than CVE-2012-4418.
  affected_package: org.apache.axis2:axis2
  vulnerable_versions:
  - "*"
  package_manager: maven
  cve:
  - CVE-2012-5351
  disclosed_date: 2012-10-09
  created_date: 2012-10-09
  last_modified_date: 2017-03-10
  credit:
  - OSSIndex
  references:
  - http://www.nds.rub.de/media/nds/veroeffentlichungen/2012/08/22/BreakingSAML_3.pdf
  - http://xforce.iss.net/xforce/xfdb/79487
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/79487
  source_url: https://ossindex.net/resource/package/7015387920/vulnerabilities
- id: ossindex:maven:org.apache.axis2:axis2:353501
  title: "[CVE-2012-5785]  Improper Input Validation"
  description: Apache Axis2/Java 1.6.2 and earlier does not verify that the server
    hostname matches a domain name in the subject's Common Name (CN) or subjectAltName
    field of the X.509 certificate, which allows man-in-the-middle attackers to spoof
    SSL servers via an arbitrary valid certificate.
  affected_package: org.apache.axis2:axis2
  vulnerable_versions:
  - 1.5.1
  - 1.5.2
  - 1.5.3
  - 1.5.4
  - 1.5.5
  - 1.5.6
  - '1.6'
  - 1.6.1
  - 1.6.2
  package_manager: maven
  cve:
  - CVE-2012-5785
  disclosed_date: 2012-11-04
  created_date: 2012-11-04
  last_modified_date: 2017-03-10
  credit:
  - OSSIndex
  references:
  - http://secunia.com/advisories/51219
  - http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf
  - http://www.securityfocus.com/bid/56408
  - http://xforce.iss.net/xforce/xfdb/79830
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/79830
  source_url: https://ossindex.net/resource/package/7015387920/vulnerabilities
- id: snykio:maven:org.apache.axis2:axis2:30522
  title: Improper Input Validation
  description: |
    [org.apache.axis2:axis2][1] is a Web Services / SOAP / WSDL engine, the
    successor to the widely used Apache Axis SOAP stack.

    Affected versions of this package are vulnerable to Improper Input
    Validation. It does not properly reject DTDs in SOAP messages, which
    allows remote attackers to read arbitrary files, send HTTP requests to
    intranet servers, or cause a denial of service (CPU and memory
    consumption) via a crafted DTD, as demonstrated by an entity declaration
    in a request to the Synapse SimpleStockQuoteService.



    [1]: http://axis.apache.org/axis2/java/core/
  affected_package: org.apache.axis2:axis2
  vulnerable_versions:
  - ">= 0 < 1.5.2"
  severity: high
  package_manager: maven
  cve:
  - CVE-2010-1632
  cwe:
  - CWE-20
  disclosed_date: 2010-06-22
  created_date: 2014-01-10
  last_modified_date: 2014-01-10
  credit:
  - Unknown
  references:
  - https://github.com/apache/axis2-java/commit/026d9037c3040580c2b04d8d8e4691c33a933418
  - https://github.com/apache/axis2-java/commit/dbb2a3d37baf651f34b3bb064badb0e2c377f46b
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2010-1632
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEAXIS2-30522
- id: snykio:maven:org.apache.axis2:axis2:30523
  title: Cross-site Scripting (XSS)
  description: |+
    [`org.apache.axis2:axis2`][1] is a Web Services / SOAP / WSDL engine,
    the successor to Apache Axis SOAP stack.

    Cross-site scripting (XSS) vulnerability in
    axis2-admin/axis2-admin/engagingglobally in the administration console
    in Apache Axis2/Java 1.4.1, 1.5.1, and possibly other versions, as used
    in SAP Business Objects 12, 3com IMC, and possibly other products,
    allows remote attackers to inject arbitrary web script or HTML via the
    modules parameter. NOTE: some of these details are obtained from third
    party information.



    [1]: https://axis2.apache.org
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: org.apache.axis2:axis2
  vulnerable_versions:
  - ">= 1.4.1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2010-2103
  cwe:
  - CWE-79
  disclosed_date: 2010-05-27
  created_date: 2014-01-10
  last_modified_date: 2014-01-10
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2010-2103
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEAXIS2-30523
- id: snykio:maven:org.apache.axis2:axis2:30524
  title: Improper Authentication
  description: |
    [`org.apache.axis2:axis2`][1] is a Web Services / SOAP / WSDL engine,
    the successor to Apache Axis SOAP stack.

    Apache Axis2 allows remote attackers to forge messages and bypass
    authentication via an \"XML Signature wrapping attack.\"



    [1]: https://axis2.apache.org
  affected_package: org.apache.axis2:axis2
  vulnerable_versions:
  - ">= 1.1 <= 1.6.2"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2012-4418
  cwe:
  - CWE-287
  disclosed_date: 2014-06-17
  created_date: 2014-06-17
  last_modified_date: 2014-06-17
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-4418
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEAXIS2-30524
- id: snykio:maven:org.apache.axis2:axis2:30525
  title: Improper Authentication
  description: |
    [`org.apache.axis2:axis2`][1] is a Web Services / SOAP / WSDL engine,
    the successor to Apache Axis SOAP stack.

    Apache Axis2 allows remote attackers to forge messages and bypass
    authentication via a SAML assertion that lacks a Signature element, aka
    a \"Signature exclusion attack,\" a different vulnerability than
    CVE-2012-4418.



    [1]: https://axis2.apache.org
  affected_package: org.apache.axis2:axis2
  vulnerable_versions:
  - ">= 1.1 <= 1.6.3"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2012-5351
  cwe:
  - CWE-287
  disclosed_date: 2012-10-09
  created_date: 2014-06-17
  last_modified_date: 2014-06-17
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5351
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEAXIS2-30525
- id: snykio:maven:org.apache.axis2:axis2:30526
  title: Improper Certificate Validation
  description: |
    [org.apache.axis2:axis2][1] is a Web Services / SOAP / WSDL engine, the
    successor to the widely used Apache Axis SOAP stack.

    Affected versions of this package are vulnerable to Improper Certificate
    Validation. It does not verify that the server hostname matches a domain
    name in the subject\'s Common Name (CN) or subjectAltName field of the
    X.509 certificate, which allows man-in-the-middle attackers to spoof SSL
    servers via an arbitrary valid certificate.



    [1]: http://axis.apache.org/axis2/java/core/
  affected_package: org.apache.axis2:axis2
  vulnerable_versions:
  - ">= 0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2012-5785
  cwe:
  - CWE-20
  disclosed_date: 2012-11-04
  created_date: 2014-06-17
  last_modified_date: 2014-06-17
  credit:
  - Unknown
  references:
  - http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf
  - https://issues.apache.org/jira/browse/AXIS-2916
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5785
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEAXIS2-30526
- id: snykio:maven:org.apache.axis2:axis2:31607
  title: Session Fixation
  description: |
    [org.apache.axis2:axis2][1] is a Web Services / SOAP / WSDL engine, the
    successor to the widely used Apache Axis SOAP stack.

    Affected versions of this package are vulnerable to Session Fixation in
    the administrative interface at the path `/axis2/axis2-admin`. Attacker
    can exploit this flaw by doing a Cross-Site Scripting (XSS) attack and
    get his Session cookie and perform session hijacking attack.



    [1]: http://axis.apache.org/axis2/java/core/
  affected_package: org.apache.axis2:axis2
  vulnerable_versions:
  - "< 1.7.4"
  severity: medium
  package_manager: maven
  cwe:
  - CWE-384
  disclosed_date: 2010-01-13
  created_date: 2017-12-25
  last_modified_date: 2017-12-25
  credit:
  - Unknown
  references:
  - https://github.com/apache/axis2-java/commit/45cdd6f56d5b1d297d49836beb0d91d62b5864e6
  - https://issues.apache.org/jira/browse/AXIS2-4739
  - https://www.exploit-db.com/exploits/12721
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEAXIS2-31607
- id: snykio:maven:org.apache.axis2:axis2:31608
  title: Cross-site Scripting (XSS)
  description: |+
    [`org.apache.axis2:axis2`][1] is a Web Services / SOAP / WSDL engine,
    the successor to Apache Axis SOAP stack.

    Affected versions of this package are vulnerable to Cross-Site Scripting
    (XSS) attacks.



    [1]: https://axis2.apache.org
    \nA cross-site scripting attack occurs when the attacker tricks a
    legitimate web-based application or site to accept a request as
    originating from a trusted source.

    This is done by escaping the context of the web application; the web
    application then delivers that data to its users along with other
    trusted dynamic content, without validating it. The browser unknowingly
    executes malicious script on the client side (through client-side
    languages; usually JavaScript or HTML) in order to perform actions that
    are otherwise typically blocked by the browser’s Same Origin Policy.

    ֿInjecting malicious code is the most prevalent manner by which XSS is
    exploited; for this reason, escaping characters in order to prevent this
    manipulation is the top method for securing code against this
    vulnerability.

    Escaping means that the application is coded to mark key characters, and
    particularly key characters included in user input, to prevent those
    characters from being interpreted in a dangerous context. For example,
    in HTML, `<` can be coded as `&lt`; and `>` can be coded as `&gt`; in
    order to be interpreted and displayed as themselves in text, while
    within the code itself, they are used for HTML tags. If malicious
    content is injected into an application that escapes special characters
    and that malicious content uses `<` and `>` as HTML tags, those
    characters are nonetheless not interpreted as HTML tags by the browser
    if they’ve been correctly escaped in the application code and in this
    way the attempted attack is diverted.

    The most prominent use of XSS is to steal cookies (source: OWASP
    HttpOnly) and hijack user sessions, but XSS exploits have been used to
    expose sensitive information, enable access to privileged services and
    functionality and deliver malware.

    ### Types of attacks   {#types-of-attacks}

    There are a few methods by which XSS can be manipulated:

    | Type | Origin | Description |
    |----------
    | **Stored** | Server | The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link. |
    | **Reflected** | Server | The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser. |
    | **DOM-based** | Client | The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data. |
    | **Mutated** |  | The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters. |

    ### Affected environments   {#affected-environments}

    The following environments are susceptible to an XSS attack:

    * Web servers
    * Application servers
    * Web application environments

    ### How to prevent   {#how-to-prevent}

    This section describes the top best practices designed to specifically
    protect your code:

    * Sanitize data input in an HTTP request before reflecting it back,
      ensuring all data is validated, filtered or escaped before echoing
      anything back to the user, such as the values of query parameters
      during searches.
    * Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces
      to their respective HTML or URL encoded equivalents.
    * Give users the option to disable client-side scripts.
    * Redirect invalid requests.
    * Detect simultaneous logins, including those from two separate IP
      addresses, and invalidate those sessions.
    * Use and enforce a Content Security Policy (source: Wikipedia) to
      disable any features that might be manipulated for an XSS attack.
    * Read the documentation for any of the libraries referenced in your
      code to understand which elements allow for embedded HTML.

  affected_package: org.apache.axis2:axis2
  vulnerable_versions:
  - "< 1.7.4"
  severity: medium
  package_manager: maven
  cwe:
  - CWE-79
  disclosed_date: 2015-01-07
  created_date: 2017-12-25
  last_modified_date: 2017-12-25
  credit:
  - Unknown
  references:
  - https://github.com/apache/axis2-java/commit/1b560264151217dae8b34b6aa4dfff4f51377656
  - https://issues.apache.org/jira/browse/AXIS2-5683
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEAXIS2-31608
- id: snykio:maven:org.apache.axis2:axis2:31609
  title: Local File Inclusion (LFI)
  description: |
    [`org.apache.axis2:axis2`][1] is a Web Services / SOAP / WSDL engine,
    the successor to Apache Axis SOAP stack.

    Affected versions of the package are vulnerable to Local File Inclusion
    (LFI).



    [1]: https://axis2.apache.org
  affected_package: org.apache.axis2:axis2
  vulnerable_versions:
  - "< 1.7.5"
  severity: high
  package_manager: maven
  cwe:
  - CWE-98
  disclosed_date: 2017-04-18
  created_date: 2017-12-25
  last_modified_date: 2017-12-25
  credit:
  - Unknown
  references:
  - https://github.com/apache/axis2-java/commit/65aaacc779530682887bc6da4099b5ec4cfab406
  - https://issues.apache.org/jira/browse/AXIS2-5846
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEAXIS2-31609
